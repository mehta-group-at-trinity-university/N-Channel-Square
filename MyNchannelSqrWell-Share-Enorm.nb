(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    279116,       5504]
NotebookOptionsPosition[    276349,       5421]
NotebookOutlinePosition[    276826,       5441]
CellTagsIndexPosition[    276783,       5438]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
N-Channel Square Well Model (with energy normalized functions)\
\>", "Title",
 CellChangeTimes->{{3.702919793102016*^9, 3.702919845674234*^9}, {
  3.760792497857376*^9, 3.7607925036968937`*^9}}],

Cell["", "Author",
 CellChangeTimes->{{3.76079248791514*^9, 3.760792489793722*^9}}],

Cell["NPM", "Author",
 CellChangeTimes->{{3.702919850496758*^9, 3.7029198507380953`*^9}},
 TextAlignment->Left,
 TextJustification->0.],

Cell[CellGroupData[{

Cell["Setup the Riccati functions and their derivatives", "Section",
 CellChangeTimes->{{3.702919873804351*^9, 3.702919876052968*^9}, {
  3.747239098903719*^9, 3.747239132290958*^9}}],

Cell[TextData[{
 "Use energy normalized functions (assuming ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{"1", "/", "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the reduced mass)"
}], "Text",
 CellChangeTimes->{{3.7607924923361073`*^9, 3.760792496473428*^9}, {
  3.760792702567831*^9, 3.76079271335785*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.760792570591222*^9, 3.760792572333581*^9}, 
   3.760792658108672*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "L", "]"}]], "Input",
 CellChangeTimes->{{3.738598996933058*^9, 3.738598998253544*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"L_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SqrtBox[
      FractionBox["1", 
       RowBox[{"\[Pi]", " ", "k"}]]], 
     SqrtBox[
      RowBox[{
       FractionBox[
        RowBox[{"\[Pi]", " ", "k"}], "2"], " ", "r"}]], 
     RowBox[{"BesselJ", "[", 
      RowBox[{
       RowBox[{"L", "+", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{"k", " ", "r"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7023181956761847`*^9, 3.702318255529701*^9}, {
   3.702318472957452*^9, 3.702318486560416*^9}, {3.7023185367232847`*^9, 
   3.702318554228112*^9}, {3.702319282766176*^9, 3.7023192852972527`*^9}, {
   3.7028544074561863`*^9, 3.702854440399633*^9}, {3.7029227268144617`*^9, 
   3.7029227288043547`*^9}, {3.738599516012389*^9, 3.7385995228269777`*^9}, {
   3.7386800797423573`*^9, 3.738680108219729*^9}, {3.73868024570057*^9, 
   3.738680262405077*^9}, {3.7390191680584917`*^9, 3.739019233804098*^9}, {
   3.7390304473748293`*^9, 3.739030455658058*^9}, {3.7390328687944107`*^9, 
   3.739032879919407*^9}, {3.739038913539528*^9, 3.739038917264394*^9}, {
   3.739190556483444*^9, 3.73919055816743*^9}, 3.74708350335891*^9, 
   3.7607925111233797`*^9, {3.760792549546578*^9, 3.760792561830721*^9}, {
   3.760792666019183*^9, 3.760792666834899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"df", "[", 
     RowBox[{"L_", ",", "k_", ",", "r_"}], "]"}], "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"L", ",", "k", ",", "r"}], "]"}], ",", "r"}], "]"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"r", "-", "derivative"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7029226895450687`*^9, 3.7029227235156097`*^9}, {
   3.738599548260717*^9, 3.738599559696516*^9}, 3.738680124445875*^9, {
   3.7386802265126534`*^9, 3.738680251603394*^9}, 3.738801045784504*^9, {
   3.73901923808486*^9, 3.739019361550112*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dfdk", "[", 
     RowBox[{"L_", ",", "k_", ",", "r_"}], "]"}], "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"L", ",", "k", ",", "r"}], "]"}], ",", "k"}], "]"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"k", "-", "derivative"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7390312085085087`*^9, 3.739031234065895*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ddfdk", "[", 
    RowBox[{"L_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"df", "[", 
       RowBox[{"L", ",", "k", ",", "r"}], "]"}], ",", "k"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.739038604768271*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"L_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SqrtBox[
      FractionBox["1", 
       RowBox[{"\[Pi]", " ", "k"}]]], 
     SqrtBox[
      RowBox[{
       FractionBox[
        RowBox[{"\[Pi]", " ", "k"}], "2"], " ", "r"}]], 
     RowBox[{"BesselY", "[", 
      RowBox[{
       RowBox[{"L", "+", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{"k", " ", "r"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702854656410961*^9, 3.70285466632973*^9}, {
   3.702922751133884*^9, 3.7029227534518414`*^9}, {3.738599607826187*^9, 
   3.738599613542663*^9}, {3.738667410876144*^9, 3.7386674232746887`*^9}, 
   3.7386801276848183`*^9, 3.738680276885746*^9, {3.738799978566378*^9, 
   3.738799983003128*^9}, {3.739019315832759*^9, 3.739019329671736*^9}, {
   3.739019389959619*^9, 3.739019406405035*^9}, {3.739032887904346*^9, 
   3.739032891487221*^9}, {3.739038921920827*^9, 3.7390389245362587`*^9}, {
   3.739190566217877*^9, 3.739190567952366*^9}, 3.760792733984744*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dg", "[", 
    RowBox[{"L_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"L", ",", "k", ",", "r"}], "]"}], ",", "r"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.702922755520462*^9, 3.7029227886036*^9}, {
   3.7385996385724707`*^9, 3.73859965135717*^9}, 3.7386801309812326`*^9, 
   3.738680282220716*^9, 3.7388010985442133`*^9, {3.739019418495139*^9, 
   3.739019430363598*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dgdk", "[", 
    RowBox[{"L_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"L", ",", "k", ",", "r"}], "]"}], ",", "k"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.73903125842334*^9, 3.739031266921541*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ddgdk", "[", 
    RowBox[{"L_", ",", "k_", ",", "r_"}], "]"}], "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"dg", "[", 
       RowBox[{"L", ",", "k", ",", "r"}], "]"}], ",", "k"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739031984884433*^9, 3.739031989641815*^9}}],

Cell["\<\
I\[CloseCurlyQuote]ll multiply the decaying function by a constant to rescale \
it for the strongly closed channels.\
\>", "Text",
 CellChangeTimes->{{3.703433719425181*^9, 3.703433737842691*^9}, 
   3.70351624809765*^9, 3.705282381172503*^9, {3.738596306672586*^9, 
   3.738596315260795*^9}, 3.738599780150345*^9, {3.738671485644302*^9, 
   3.7386714872344723`*^9}, {3.738674921984044*^9, 3.738674924414412*^9}, 
   3.738807249043091*^9, {3.73903290443004*^9, 3.739032906460247*^9}, {
   3.739038944911214*^9, 3.739038945830171*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gb", "[", 
     RowBox[{"L_", ",", "\[Kappa]_", ",", "r_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      SqrtBox[
       RowBox[{
        FractionBox["2", "\[Pi]"], "\[Kappa]", " ", "r"}]], 
      RowBox[{"BesselK", "[", 
       RowBox[{
        RowBox[{"L", "+", 
         FractionBox["1", "2"]}], ",", 
        RowBox[{"\[Kappa]", " ", "r"}]}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"\[Kappa]", " ", "Rshift"}], "]"}]}], "/.", 
     RowBox[{"Rshift", "\[Rule]", "1"}]}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.70231870292422*^9, 3.702318731449788*^9}, 
   3.702318784881133*^9, {3.702319289133815*^9, 3.70231929138938*^9}, {
   3.702854524728962*^9, 3.7028545573411627`*^9}, {3.7029227940936823`*^9, 
   3.702922797290936*^9}, {3.7034335905997677`*^9, 3.703433617541026*^9}, {
   3.70343366804617*^9, 3.703433668765458*^9}, {3.7034596169271803`*^9, 
   3.703459617204762*^9}, {3.703467775594838*^9, 3.703467780089224*^9}, {
   3.703468710146822*^9, 3.703468712298018*^9}, {3.703712414989415*^9, 
   3.703712415317358*^9}, 3.705282385721601*^9, {3.738599676319893*^9, 
   3.7385996997229567`*^9}, 3.738667520183978*^9, {3.738670252303928*^9, 
   3.738670285164241*^9}, {3.738670331201408*^9, 3.738670358457075*^9}, {
   3.738671933419443*^9, 3.738671933521015*^9}, 3.738680134060419*^9, 
   3.7386803144263153`*^9, {3.738680389900285*^9, 3.738680390011045*^9}, 
   3.738799995125701*^9, {3.7388014366588507`*^9, 3.73880143672287*^9}, {
   3.738932241074565*^9, 3.7389322412004147`*^9}, {3.739019440301087*^9, 
   3.7390194642080603`*^9}, {3.7390386379693317`*^9, 
   3.7390386380402527`*^9}, {3.739135015796682*^9, 3.739135017656643*^9}, {
   3.747084058800272*^9, 3.747084058887838*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dgb", "[", 
    RowBox[{"L_", ",", "\[Kappa]_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"gb", "[", 
       RowBox[{"L", ",", "\[Kappa]", ",", "r"}], "]"}], ",", "r"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702922808221755*^9, 3.7029228357083073`*^9}, {
   3.7034312333786993`*^9, 3.703431248225692*^9}, {3.703433631655361*^9, 
   3.703433642758718*^9}, {3.7385997225811377`*^9, 3.738599731785681*^9}, {
   3.738670361497698*^9, 3.738670381600062*^9}, 3.738680137060648*^9, {
   3.738680320129931*^9, 3.738680329439211*^9}, 3.738801102772799*^9, {
   3.739019493273645*^9, 3.739019511623768*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dgbd\[Kappa]", "[", 
    RowBox[{"L_", ",", "\[Kappa]_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"gb", "[", 
       RowBox[{"L", ",", "\[Kappa]", ",", "r"}], "]"}], ",", "\[Kappa]"}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7390312861380463`*^9, 3.739031292328928*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ddgbd\[Kappa]", "[", 
    RowBox[{"L_", ",", "\[Kappa]_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"dgb", "[", 
       RowBox[{"L", ",", "\[Kappa]", ",", "r"}], "]"}], ",", "\[Kappa]"}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739032010227343*^9, 3.739032021600605*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fb", "[", 
    RowBox[{"L_", ",", "\[Kappa]_", ",", "r_"}], "]"}], "=", 
   RowBox[{
    SqrtBox[
     RowBox[{
      FractionBox["2", "\[Pi]"], " ", "\[Kappa]", " ", "r"}]], 
    RowBox[{"BesselI", "[", 
     RowBox[{
      RowBox[{"L", "+", 
       RowBox[{"1", "/", "2"}]}], ",", 
      RowBox[{"\[Kappa]", " ", "r"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.70343124696681*^9, 3.7034312892984*^9}, {
   3.703431342981278*^9, 3.7034313454666157`*^9}, {3.703431481724772*^9, 
   3.703431482003531*^9}, {3.703852470119142*^9, 3.703852470632457*^9}, {
   3.738599742972728*^9, 3.7385997551393213`*^9}, 3.738680139701325*^9, 
   3.73868033683957*^9, {3.739028594652216*^9, 3.739028614130508*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dfb", "[", 
    RowBox[{"L_", ",", "\[Kappa]_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"fb", "[", 
       RowBox[{"L", ",", "\[Kappa]", ",", "r"}], "]"}], ",", "r"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.703431493567836*^9, 3.7034315051071653`*^9}, {
   3.703852482366887*^9, 3.7038524828387012`*^9}, {3.738599760932705*^9, 
   3.7385997695609407`*^9}, {3.738680075488265*^9, 3.738680076524087*^9}, 
   3.7386801424509478`*^9, 3.738680343607595*^9, 3.73880104912661*^9, {
   3.739028617139421*^9, 3.739028639665214*^9}, {3.7390288138552303`*^9, 
   3.739028817134444*^9}, {3.7390313246590633`*^9, 3.739031330249864*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dfbd\[Kappa]", "[", 
    RowBox[{"L_", ",", "\[Kappa]_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"fb", "[", 
       RowBox[{"L", ",", "\[Kappa]", ",", "r"}], "]"}], ",", "\[Kappa]"}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7390312992904873`*^9, 3.739031335857863*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ddfbd\[Kappa]", "[", 
    RowBox[{"L_", ",", "\[Kappa]_", ",", "r_"}], "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"dfb", "[", 
       RowBox[{"L", ",", "\[Kappa]", ",", "r"}], "]"}], ",", "\[Kappa]"}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739032048273281*^9, 3.739032053711342*^9}}],

Cell["\<\
The background scattering phase shift (due to the open channel only)\
\>", "Text",
 CellChangeTimes->{{3.747239141917664*^9, 3.747239155810196*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BG", "[", 
   RowBox[{"vopen_", ",", "\[Epsilon]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"y", ",", "\[Delta]", ",", "td", ",", "kin", ",", "kout"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"kin", " ", "=", " ", 
      SqrtBox[
       RowBox[{"\[Epsilon]", "+", "vopen"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"kout", "=", 
      SqrtBox["\[Epsilon]"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{"df", "[", 
        RowBox[{"0", ",", "kin", " ", ",", "1"}], "]"}], "/", 
       RowBox[{"f", "[", 
        RowBox[{"0", ",", "kin", ",", " ", "1"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"td", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"df", "[", 
         RowBox[{"0", ",", "kout", " ", ",", "1"}], "]"}], "-", 
        RowBox[{"y", " ", 
         RowBox[{"f", "[", 
          RowBox[{"0", ",", "kout", ",", " ", "1"}], "]"}]}]}], 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"0", ",", "kout", ",", " ", "1"}], "]"}], "-", 
        RowBox[{"y", " ", 
         RowBox[{"g", "[", 
          RowBox[{"0", ",", "kout", ",", " ", "1"}], "]"}]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"ArcTan", "[", "td", "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739029975554359*^9, 3.739030017600848*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{"BG", "[", 
     RowBox[{"10", ",", "\[Epsilon]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76079175423942*^9, 3.760791775661121*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
mlylAS5ZRvjcMhPzHFZZHy/RgP8BNJRltg==
        "]], LineBox[CompressedData["
1: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
4935DR7OhAIOWa3vP6OiAv+iM1escuXx/SY/MUOogsYiVfkNEvLoO/15QvKE
ClZk5X5rnpbDsNf1v/1OqYDbK1bmPiYHMS7fcH60CpSWOe0+1icHtWSeSJSs
AubmFXY/38phYyR38HuBCp4xng9E3JVDia+mvVGPCtwObHgf7SKHRD1VqSIn
VRT/0befVyGL+Ms+1Z48NfSZuLIjK2fDJdGtXq5bDQZRjYvmD8lgfGX2RMZT
dQglfpZ+NpbB1+8rDokiNbD4rOGyzAuzkLl8vnqdpyYSZ85VOkrOQl5ECMPX
WAuLfSKa7yVII9Jph53kiBYcGyWSbppKI3NDu+tO6tz9ssexw2C+NErWOu2p
ntJC3sGTJvfnSlP34pqEcxJcNFlq9JUaScNVx7CVRefCZWTw2XcdaZiODXtp
G3JR8ynG20ddGh9Two+s8uRivzl7vy4hjUXt13Mi67jQvNlhGf2BBrqJ3/i9
11xcH8t85vmehr7jJmvamrh47NvOWPqOhiyy+Jveey4uuivI/HxLAzugmfuq
i4sBp7lbXRtpmBRK2tHEePBRWKjq8ZKGd7JmFTaqPJT+lgmdKKQhRT8tr86O
h2vdCwPdk2n4/Wt19ql1PGj8JxuyMYmGDU+H08038PA6xWC99SUaaI6257Md
eHgRHBpkeJGGEOGE/1FnHurm9HsScTQ4NGzVM/blQUGJm/XpDA1yIewb58N5
ePInPNUglIbj5TEpdkVUvv9SRyRcaOjtKE+ceMKDi2xtmb4zDVumfsXfKuHB
N3mR+aZtNBiZuZyVLOdBV3PpkswtNLTl6hwpfs7DCtdOV3tHGkyTy7YbNvNw
derPQLk9DV27h7RkB3hI8LMX6YGGdepO2a+0+ThCD2z+pEf97zeT8u06fBhW
doZZUP6WN+tDny4fzXKVt5N1aRCihK5oyMf10pqETTo03N1JCh3n8+HflJZa
Q9Iw+/6QQ/tyPlwkw1e3adFQvTJWrJ96FwQePbzOQYkGpoKf+vFtfGxfU00+
ZdPg3mplRnfhQ9PKJ9SA8uiukQBTNz5qD6ZdkmLRoBPn2npwBx/mJRK3ntJp
OP3OIH8miI+Yeerda+VosNpTvZ1xlg+pz+eMiiWp+WzrWV0ZzUddbJSUIeWH
1nKmoef5KHOu8UmToPKpbprVEcdH9LzhF0fFqf5Xvn94O4mPK7nBUzYzBNpU
++WRxYd+85LW8UkCe6vY5XvK+Pg42fx3yTABg3mLc/kVfPR6/jWwjPLXy85J
zSI+lO5nz5QOEdiy92rg0ud8HBdflVkxSGCZup4qrY4PZ43+rvp+ArP2Wey/
8p6Pze1r54r/IJCh4aVdO8JHW45xnegrgaULDE28xviYSJN2daHcvPb34vFx
PryjbjgOf6HGh56x057mY06nlZCkvPfNnf1CCQEOSInnRXcSwJlf5UaKAuza
T3cN7CDwZeC0W4yeAB8fN+4NayUgpK33JQ0EyIgzzeNS5mgq7ysyFODOruN2
lW8J2NrmnP5uIoB15uw8BcoFWXW5yxcJEFPL/nOrmcApZ87kTysBjK9l5vS9
IaD97FbS+u0ClN8tLSypJVBvNJ7V7irA6kkZtz2UDyXZ/OPvTuUTGrnwKNfs
6mk440nVF7Zge0QNgf10Q5kyXwEc98w64PiKQJlbftjcYAFyyMmGmWoCLuMP
PegxAiwwjf6V/IyAlBcRdDVWgJOhIYs3U86vcTpqFC9AeuCGOjpl8YzRVJuL
VLwvpz9aROD2qiVNJ1IF0Hvz7U94BYGRC8WrhrIFWH9486LwMgLxxiKDxqcC
WHGHHhcXU/FLtsuElwvg1flxQki5zPp393yRAAbHziVZUu531slOqBJgWMay
XfSEgN2ZaO6mWgEUzrZcaCgiQPvkwH79ToCD2QfCJgoJhMV//a/utwAN7HX/
xDwkcCFN2H50VIDQxm0VzpTv3FQqNh4X4NW/hgIdym0law7FTAngf93+Q9k/
BMx6coftJUjMkz8zZ6yAoN7bwd01iiSyB317gx8Q8Pkl9ealAYnCnqbS3HwC
7ndW1rsakbi5dDLqNOUtnqdrBoxJcF54JrlRXt0g+VxpPonJ2rWhdMo6uRLF
notJSEU12x/OI/DdSyx7wppEa/k//K13CbSrIvP8KhLXDkn8t4By8+vjGdw1
JGwv9SkzKFdazqSusiVhwf0hW5tLIEvtT2zCRiq+c7p7JWXvxqlD+m4krGt+
2a24Q8D1rMXBEncSOlu85UnKmxF2YIMHiY6hFlkpyivzJ3eH7KDyb1Aue55D
ra/oCa+KXST6ixIm11P+ajVm73yQxBQn/Lr/bQJeD4Z5Z+NImGbvvVB3k0Bg
uOO0bQKJBy5qnQWUQxwftspdJDEdGXQghXLUSEhsfBIJ7UWW/t6U880nppKv
kODVu12YySYwUTHz9mYuia4Rz/QVlCUuehT45ZFY9bbDwIiynHdFjME9EnXs
xCklylq0UyvzC0hsjGnx6s2i6relFTwqIrFi4t8VSZTjG+ViKqupfpelqEze
IHD5xm6/My9JOH20fdBN+UZwvbVNDQnx9y1RLZQfc+Ina+pJBGld+/WAcrsL
y6+phcSAqnHBbspdhsHWl1pJtIzWWrhRHphu1tr6joT99csS6yhLZCS1vG8n
sXC4d7UxZd2vqtZfvlLxLy9mDWYSmPfwiFbWdxKSgy2ML5SXRnyY2NlN4lX0
1SdNlO11r9zv6SXBihosLaS8P4CnNTREQrq0LSKcsnDZyYmCXySeLo17GUI5
Qv5Lc/AIieVCvTW7KKfcu3FufJyEd4TpwEbKmSekfJ9MUv1RsFBdRTl3084V
wmkSJzqchOaUHwqea1r+IREztl7FhPLTXzoTMzMkFgQN9wko/w82XfmE
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$1053333#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-13.348353029270912`, 15.48039591397294}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.760791776264751*^9, 3.760792765010562*^9}]
}, Open  ]],

Cell["The tri-diagonal potential matrix:", "Text",
 CellChangeTimes->{{3.747239167045012*^9, 3.747239177073457*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetupPotentialTriDiag", "[", 
   RowBox[{"NumChan_", ",", "D0_", ",", "\[CapitalDelta]_", ",", "Cij_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "i", ",", "j", ",", "\[Epsilon]thresh", ",", "\[CapitalLambda]vals", ",",
       "U", ",", "V", ",", "UC", ",", "\[CapitalLambda]C", ",", "VC"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Epsilon]thresh", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "NumChan"}], ",", "0", ",", 
          "\[CapitalDelta]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NumChan"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "j"}], ",", 
          RowBox[{"-", "D0"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"KroneckerDelta", "[", 
              RowBox[{"i", ",", 
               RowBox[{"j", "-", "1"}]}], "]"}], "+", " ", 
             RowBox[{"KroneckerDelta", "[", 
              RowBox[{"i", ",", 
               RowBox[{"j", "+", "1"}]}], "]"}]}], ")"}], "Cij"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NumChan"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NumChan"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]vals", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Eigenvalues", "[", "V", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"U", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"Eigenvectors", "[", "V", "]"}], "[", 
            RowBox[{"[", "n", "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "NumChan"}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"VC", "=", 
      RowBox[{"V", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", 
          RowBox[{"NumChan", "-", "1"}]}], ",", 
         RowBox[{"1", ";;", 
          RowBox[{"NumChan", "-", "1"}]}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]C", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Eigenvalues", "[", "VC", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UC", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"Eigenvectors", "[", "VC", "]"}], "[", 
            RowBox[{"[", "n", "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"NumChan", "-", "1"}]}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\[CapitalLambda]vals", ",", "U", ",", "\[Epsilon]thresh", ",", "V", 
       ",", "UC", ",", "\[CapitalLambda]C"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.702921890065279*^9, 3.702922036740788*^9}, {
   3.702922076670105*^9, 3.702922095219328*^9}, {3.702991744329726*^9, 
   3.70299183670363*^9}, 3.702997281917778*^9, {3.7030024438476677`*^9, 
   3.7030024903021*^9}, {3.703002579124279*^9, 3.703002586772039*^9}, {
   3.7030026325932217`*^9, 3.7030026329133472`*^9}, {3.703002689550164*^9, 
   3.7030026953883753`*^9}, 3.703003010405304*^9, {3.703096867538075*^9, 
   3.703096882823475*^9}, {3.703096955460376*^9, 3.703097012038883*^9}, 
   3.7030971600779467`*^9, {3.703097273061318*^9, 3.703097286060116*^9}, {
   3.703360424681692*^9, 3.703360431865127*^9}, {3.7034209700894127`*^9, 
   3.703421131277364*^9}, {3.703435337774157*^9, 3.70343534154963*^9}, {
   3.703436288203871*^9, 3.7034362895408487`*^9}, {3.703610547099174*^9, 
   3.703610553801413*^9}, {3.7036106421337423`*^9, 3.703610646572033*^9}, {
   3.703611334941221*^9, 3.703611351140664*^9}, {3.7386301168074093`*^9, 
   3.73863012853658*^9}, {3.738630896965973*^9, 3.738630918042534*^9}, {
   3.738631253531239*^9, 3.738631254057255*^9}, {3.738667627647912*^9, 
   3.738667661396399*^9}, 3.747083393607435*^9}],

Cell["\<\
Setup a potential matrix with resonance at position \
\[OpenCurlyDoubleQuote]eoffset\[CloseCurlyDoubleQuote]. control the width \
with coupling \[OpenCurlyDoubleQuote]Cij\[CloseCurlyDoubleQuote].  Only \
include couplings between the open channel and each closed channels.\
\>", "Text",
 CellChangeTimes->{{3.7472391967488117`*^9, 3.747239264222907*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetupPotentialOpenClosed", "[", 
   RowBox[{
   "NumChan_", ",", "Dopen_", ",", "\[CapitalDelta]_", ",", "Cij_", ",", 
    "eoffset_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "i", ",", "j", ",", "\[Epsilon]thresh", ",", "\[CapitalLambda]vals", ",",
       "U", ",", "V", ",", "n", ",", "r0", ",", "v0", ",", "VC", ",", "UC", 
      ",", "\[CapitalLambda]C"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", "1"}], ";", 
     RowBox[{"r0", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Epsilon]thresh", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "NumChan"}], ",", "0", ",", 
          RowBox[{"\[CapitalDelta]", "+", 
           RowBox[{"eoffset", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NumChan"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v0", "=", 
      RowBox[{"v0", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SqrtBox[
            RowBox[{"v0", "-", "\[CapitalDelta]"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"r0", " ", 
             SqrtBox[
              RowBox[{"v0", "-", "\[CapitalDelta]"}]]}], "]"}]}], "+", 
          RowBox[{
           SqrtBox["\[CapitalDelta]"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"r0", " ", 
             SqrtBox[
              RowBox[{"v0", "-", "\[CapitalDelta]"}]]}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"v0", ",", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"n", "-", 
                  FractionBox["1", "2"]}], ")"}], "2"], "+", 
               SuperscriptBox["n", "2"]}], ")"}], 
             SuperscriptBox["\[Pi]", "2"]}], "+", "\[CapitalDelta]"}]}], 
          "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NumChan"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NumChan"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "i"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"-", "v0"}], "+", "\[CapitalDelta]", "+", 
         RowBox[{"eoffset", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NumChan", "-", "1"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"[", 
        RowBox[{"NumChan", ",", "NumChan"}], "]"}], "]"}], "=", 
      RowBox[{"-", "Dopen"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"V", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "NumChan"}], "]"}], "]"}], "=", "Cij"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"V", "[", 
          RowBox[{"[", 
           RowBox[{"NumChan", ",", "i"}], "]"}], "]"}], "=", "Cij"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NumChan", "-", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]vals", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Eigenvalues", "[", "V", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"U", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"Eigenvectors", "[", "V", "]"}], "[", 
            RowBox[{"[", "n", "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "NumChan"}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"VC", "=", 
      RowBox[{"V", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", 
          RowBox[{"NumChan", "-", "1"}]}], ",", 
         RowBox[{"1", ";;", 
          RowBox[{"NumChan", "-", "1"}]}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]C", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Eigenvalues", "[", "VC", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UC", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"Eigenvectors", "[", "VC", "]"}], "[", 
            RowBox[{"[", "n", "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", 
           RowBox[{"NumChan", "-", "1"}]}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\[CapitalLambda]vals", ",", "U", ",", "\[Epsilon]thresh", ",", "V", 
       ",", "UC", ",", "\[CapitalLambda]C"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7036109344060593`*^9, 3.703610943449651*^9}, {
   3.7036110817755947`*^9, 3.70361122318935*^9}, {3.7036113704919357`*^9, 
   3.703611372739855*^9}, {3.703690302297477*^9, 3.703690310102647*^9}, {
   3.703713803399741*^9, 3.703713803949979*^9}, {3.703715064423551*^9, 
   3.703715069045598*^9}, {3.703785194515109*^9, 3.703785210224633*^9}, {
   3.703785394612567*^9, 3.703785426241061*^9}, {3.7037855703351917`*^9, 
   3.703785573181183*^9}, {3.703807866280555*^9, 3.703807879599556*^9}, {
   3.7256687484078836`*^9, 3.725668762688245*^9}, {3.725668820725069*^9, 
   3.725668823419332*^9}, {3.7386301861674623`*^9, 3.738630221805902*^9}, {
   3.7386302839654007`*^9, 3.738630301909321*^9}, {3.738667682117414*^9, 
   3.7386677664082003`*^9}, {3.738667804370175*^9, 3.738667805073221*^9}, {
   3.738667835904189*^9, 3.7386678760212193`*^9}, {3.738667950242607*^9, 
   3.738667952691113*^9}, 3.7386730116319838`*^9, {3.738797349884346*^9, 
   3.7387974914396467`*^9}, {3.738797627137411*^9, 3.738797827268605*^9}, {
   3.7387979157940207`*^9, 3.738797917184184*^9}, {3.738809835063154*^9, 
   3.738809955041315*^9}, 3.739040220389022*^9}],

Cell["A simple two-channel potential:", "Text",
 CellChangeTimes->{{3.747239274448398*^9, 3.747239281686181*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Setup2channelpot", "[", 
   RowBox[{"Deptho_", ",", "Depthc_", ",", "\[CapitalDelta]_", ",", "c_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "i", ",", "j", ",", "\[Epsilon]thresh", ",", "\[CapitalLambda]vals", ",",
       "U", ",", "V", ",", "r0", ",", "v0", ",", "VC", ",", "UC", ",", 
      "\[CapitalLambda]C"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r0", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Epsilon]thresh", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]thresh", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "=", "\[CapitalDelta]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
      RowBox[{"-", "Depthc"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
      RowBox[{"-", "Deptho"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", "c"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", "c"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]vals", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Eigenvalues", "[", "V", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"U", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"Eigenvectors", "[", "V", "]"}], "[", 
            RowBox[{"[", "n", "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"VC", "=", 
      RowBox[{"V", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", "1"}], ",", 
         RowBox[{"1", ";;", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]C", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Eigenvalues", "[", "VC", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UC", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{"Normalize", "[", 
           RowBox[{
            RowBox[{"Eigenvectors", "[", "VC", "]"}], "[", 
            RowBox[{"[", "n", "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "1"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\[CapitalLambda]vals", ",", "U", ",", "\[Epsilon]thresh", ",", "V", 
       ",", "UC", ",", "\[CapitalLambda]C"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{3.738931605459331*^9}],

Cell["Functions for the interior solutions", "Text",
 CellChangeTimes->{{3.74723928570483*^9, 3.747239294301794*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", 
    RowBox[{"L_", ",", "\[Lambda]sqr_", ",", "Energy_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Energy", "-", "\[Lambda]sqr"}], ">", "0"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"L", ",", 
       SqrtBox[
        RowBox[{"Energy", "-", "\[Lambda]sqr"}]], ",", "r"}], "]"}], ",", 
     RowBox[{"fb", "[", 
      RowBox[{"L", ",", 
       SqrtBox[
        RowBox[{"\[Lambda]sqr", "-", "Energy"}]], ",", "r"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d\[Phi]", "[", 
    RowBox[{"L_", ",", "\[Lambda]sqr_", ",", "Energy_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Energy", "-", "\[Lambda]sqr"}], ">", "0"}], ",", 
     RowBox[{"df", "[", 
      RowBox[{"L", ",", 
       SqrtBox[
        RowBox[{"Energy", "-", "\[Lambda]sqr"}]], ",", "r"}], "]"}], ",", 
     RowBox[{"dfb", "[", 
      RowBox[{"L", ",", 
       SqrtBox[
        RowBox[{"\[Lambda]sqr", "-", "Energy"}]], ",", "r"}], "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7034342204702187`*^9, 3.7034343177760563`*^9}, {
  3.7034348037033987`*^9, 3.703434816964126*^9}, {3.738597916531938*^9, 
  3.73859792099374*^9}, {3.738597996254898*^9, 3.7385980338508043`*^9}, {
  3.738599824319281*^9, 3.738599851247024*^9}, {3.738801050899685*^9, 
  3.7388010529716*^9}, {3.73902870702085*^9, 3.739028792696156*^9}, {
  3.7390288495761747`*^9, 3.739028938812546*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d\[Phi]dE", "[", 
   RowBox[{"L_", ",", "\[Lambda]sqr_", ",", "Energy_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", "\[Kappa]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"k", "=", 
      SqrtBox[
       RowBox[{"Energy", "-", "\[Lambda]sqr"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]", "=", 
      SqrtBox[
       RowBox[{"\[Lambda]sqr", "-", "Energy"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Energy", "-", "\[Lambda]sqr"}], ">", "0"}], ",", 
       RowBox[{
        RowBox[{"dfdk", "[", 
         RowBox[{"L", ",", "k", ",", "r"}], "]"}], 
        FractionBox["1", 
         RowBox[{"2", "k"}]]}], ",", 
       RowBox[{
        RowBox[{"dfbd\[Kappa]", "[", 
         RowBox[{"L", ",", "\[Kappa]", ",", " ", "r"}], "]"}], 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"-", "1"}], 
          RowBox[{"2", "\[Kappa]"}]], ")"}]}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dd\[Phi]dE", "[", 
   RowBox[{"L_", ",", "\[Lambda]sqr_", ",", "Energy_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Kappa]", ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"k", "=", 
      SqrtBox[
       RowBox[{"Energy", "-", "\[Lambda]sqr"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]", "=", 
      SqrtBox[
       RowBox[{"\[Lambda]sqr", "-", "Energy"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Energy", "-", "\[Lambda]sqr"}], ">", "0"}], ",", 
       RowBox[{
        RowBox[{"ddfdk", "[", 
         RowBox[{"L", ",", "k", ",", "r"}], "]"}], 
        FractionBox["1", 
         RowBox[{"2", "k"}]]}], ",", 
       RowBox[{
        RowBox[{"ddfbd\[Kappa]", "[", 
         RowBox[{"L", ",", "\[Kappa]", ",", " ", "r"}], "]"}], 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"-", "1"}], 
          RowBox[{"2", "\[Kappa]"}]], ")"}]}]}], "]"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.73859804852179*^9, 3.7385980795160522`*^9}, 
   3.738598120921715*^9, 3.738598170893276*^9, 3.738598210171924*^9, {
   3.738599909914542*^9, 3.738599913783399*^9}, {3.738599947877746*^9, 
   3.73859995863874*^9}, {3.7385999997296762`*^9, 3.738600086546804*^9}, {
   3.738600195717375*^9, 3.738600216636423*^9}, {3.738600247719459*^9, 
   3.738600252791232*^9}, 3.738600289365439*^9, {3.7386032073329887`*^9, 
   3.738603208867223*^9}, {3.738603328321549*^9, 3.738603356862421*^9}, 
   3.738603400401388*^9, {3.738603610474647*^9, 3.738603671712139*^9}, {
   3.73860380912434*^9, 3.738603889336097*^9}, {3.738668656410656*^9, 
   3.7386686619361773`*^9}, {3.73866869331182*^9, 3.738668698273856*^9}, {
   3.7387960933296633`*^9, 3.738796254276163*^9}, {3.7387964509598227`*^9, 
   3.738796516282991*^9}, {3.7388010607976*^9, 3.738801067479981*^9}, {
   3.739029119054298*^9, 3.739029155790862*^9}, {3.739029199298337*^9, 
   3.739029275035033*^9}, {3.739031427361765*^9, 3.739031481978994*^9}, {
   3.739032138542391*^9, 3.739032181651572*^9}}],

Cell[TextData[{
 "\[LineSeparator]Module to make the interior ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalPhi]", "ij"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.747239300878113*^9, 3.747239323004696*^9}, 
   3.760792795884486*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Make\[CapitalPhi]Mat", "[", 
   RowBox[{
   "NumChan_", ",", "L_", ",", "\[CapitalLambda]_", ",", "U_", ",", "Energy_",
     ",", "r_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[CapitalPhi]", ",", "d\[CapitalPhi]", ",", "i", ",", "j", ",", 
      "d\[CapitalPhi]dE", ",", "dd\[CapitalPhi]dE"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalPhi]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"U", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], 
         RowBox[{"\[Phi]", "[", 
          RowBox[{"L", ",", 
           RowBox[{"\[CapitalLambda]", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", "Energy", ",", "r"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NumChan"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NumChan"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d\[CapitalPhi]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"U", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], 
         RowBox[{"d\[Phi]", "[", 
          RowBox[{"L", ",", 
           RowBox[{"\[CapitalLambda]", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", "Energy", ",", "r"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NumChan"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NumChan"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d\[CapitalPhi]dE", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"U", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], 
         RowBox[{"d\[Phi]dE", "[", 
          RowBox[{"L", ",", 
           RowBox[{"\[CapitalLambda]", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", "Energy", ",", "r"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NumChan"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NumChan"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dd\[CapitalPhi]dE", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"U", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], 
         RowBox[{"dd\[Phi]dE", "[", 
          RowBox[{"L", ",", 
           RowBox[{"\[CapitalLambda]", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", "Energy", ",", "r"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NumChan"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NumChan"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\[CapitalPhi]", ",", "d\[CapitalPhi]", ",", "d\[CapitalPhi]dE", ",", 
       "dd\[CapitalPhi]dE"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQzWYo+2z39NeOIpOWMuwB0uc2CxuB6ElL0s1BdMPX
XYV7gXSLQXwRiP5wftUGEB0zp2EXiH43edoBEN2z9+ohED3Jx/gUiM4uLDoN
otmrvxjvA9JspVzmIPqeYty+p0A68M71IyD6dyTLNRA9IV4ITJuVrr8DovmK
+O6C6PalKXZqh147Vm3f5wSiBS0lDoNojzx/MP2iveIkiJ6iKHwaRL97/+Xt
2VuvHddv2fAHROt9mjftHJAOurgXTF+valM4D6SNQtXUQfTLY2FZINpty5Q8
EL1oysSpINrux88ZIPrkhJn6l4B0z3NdcxANAOGzsmE=
  "]],

Cell["Setup the matrix for the linear solve.", "Text",
 CellChangeTimes->{{3.74723932903269*^9, 3.7472393421001053`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetupABMatNew", "[", 
   RowBox[{
   "NumChan_", ",", "NumOpen_", ",", "\[Epsilon]thresh_", ",", 
    "\[CapitalPhi]_", ",", "d\[CapitalPhi]_", ",", "d\[CapitalPhi]dE_", ",", 
    "dd\[CapitalPhi]dE_", ",", "L_", ",", "r_", ",", "Energy_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "i", ",", "j", ",", "SizeAB", ",", "\[Kappa]c", ",", "ko", ",", 
      "NumClosed", ",", "ABmat", ",", "bvec", ",", "ABmatdE"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SizeAB", "=", 
      RowBox[{
       RowBox[{"2", " ", "NumChan"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NumClosed", "=", 
      RowBox[{"NumChan", "-", "NumOpen"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ABmat", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "SizeAB"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "SizeAB"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ABmatdE", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "SizeAB"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "SizeAB"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Closed", " ", "Channels", " ", "Interior"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ABmat", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"2", " ", "i"}], "-", "1"}], ",", 
            RowBox[{"1", ";;", "NumChan"}]}], "]"}], "]"}], "=", 
         RowBox[{"\[CapitalPhi]", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ABmat", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", " ", "i"}], ",", 
            RowBox[{"1", ";;", "NumChan"}]}], "]"}], "]"}], "=", 
         RowBox[{"d\[CapitalPhi]", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ABmatdE", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "i"}], "-", "1"}], ",", 
            RowBox[{"1", ";;", "NumChan"}]}], "]"}], "]"}], "=", 
         RowBox[{"d\[CapitalPhi]dE", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ABmatdE", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", "i"}], ",", 
            RowBox[{"1", ";;", "NumChan"}]}], "]"}], "]"}], "=", 
         RowBox[{"dd\[CapitalPhi]dE", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NumClosed"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Open", " ", "Channel", " ", "Interior"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmat", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "NumChan"}], "-", "1"}], ",", 
         RowBox[{"1", ";;", "NumChan"}]}], "]"}], "]"}], "=", 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"[", "NumChan", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmat", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", " ", "NumChan"}], ",", 
         RowBox[{"1", ";;", "NumChan"}]}], "]"}], "]"}], "=", 
      RowBox[{"d\[CapitalPhi]", "[", 
       RowBox[{"[", "NumChan", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmatdE", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", "NumChan"}], "-", "1"}], ",", 
         RowBox[{"1", ";;", "NumChan"}]}], "]"}], "]"}], "=", 
      RowBox[{"d\[CapitalPhi]dE", "[", 
       RowBox[{"[", "NumChan", "]"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"ABmatdE", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", "NumChan"}], ",", 
         RowBox[{"1", ";;", "NumChan"}]}], "]"}], "]"}], "=", 
      RowBox[{"dd\[CapitalPhi]dE", "[", 
       RowBox[{"[", "NumChan", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Closed", " ", "Channels", " ", "Exterior"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Kappa]c", "=", 
         SqrtBox[
          RowBox[{
           RowBox[{"\[Epsilon]thresh", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", "Energy"}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ABmat", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "i"}], "-", "1"}], ",", 
            RowBox[{"NumChan", "+", "i"}]}], "]"}], "]"}], "=", 
         RowBox[{"-", 
          RowBox[{"gb", "[", 
           RowBox[{"L", ",", "\[Kappa]c", " ", ",", "r"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ABmat", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", " ", "i"}], ",", 
            RowBox[{"NumChan", "+", "i"}]}], "]"}], "]"}], "=", 
         RowBox[{"-", 
          RowBox[{"dgb", "[", 
           RowBox[{"L", ",", "\[Kappa]c", " ", ",", "r"}], "]"}]}]}], " ", 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ABmatdE", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "i"}], "-", "1"}], ",", 
            RowBox[{"NumChan", "+", "i"}]}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"dgbd\[Kappa]", "[", 
            RowBox[{"L", ",", "\[Kappa]c", ",", "r"}], "]"}]}], 
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"2", "\[Kappa]c"}]]}], ")"}]}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ABmatdE", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", " ", "i"}], ",", 
            RowBox[{"NumChan", "+", "i"}]}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"ddgbd\[Kappa]", "[", 
            RowBox[{"L", ",", "\[Kappa]c", " ", ",", "r"}], "]"}]}], 
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"2", "\[Kappa]c"}]]}], ")"}]}]}], ";"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NumClosed"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Open", " ", "Channel", " ", "Exterior"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"ko", "=", 
      SqrtBox[
       RowBox[{"Energy", "-", 
        RowBox[{"\[Epsilon]thresh", "[", 
         RowBox[{"[", "NumChan", "]"}], "]"}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmat", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "NumChan"}], "-", "1"}], ",", 
         RowBox[{"NumChan", "+", "NumClosed", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{"-", 
       RowBox[{"f", "[", 
        RowBox[{"L", ",", "ko", " ", ",", "r"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmat", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "NumChan"}], "-", "1"}], ",", 
         RowBox[{"NumChan", "+", "NumClosed", "+", "2"}]}], "]"}], "]"}], "=", 
      RowBox[{"g", "[", 
       RowBox[{"L", ",", "ko", " ", ",", "r"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmat", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", " ", "NumChan"}], ",", 
         RowBox[{"NumChan", "+", "NumClosed", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{"-", 
       RowBox[{"df", "[", 
        RowBox[{"L", ",", "ko", " ", ",", "r"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmat", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", " ", "NumChan"}], ",", 
         RowBox[{"NumChan", "+", "NumClosed", "+", "2"}]}], "]"}], "]"}], "=", 
      RowBox[{"dg", "[", 
       RowBox[{"L", ",", "ko", " ", ",", "r"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmatdE", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "NumChan"}], "-", "1"}], ",", 
         RowBox[{"NumChan", "+", "NumClosed", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"dfdk", "[", 
         RowBox[{"L", ",", "ko", " ", ",", "r"}], "]"}]}], 
       FractionBox["1", 
        RowBox[{"2", "ko"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmatdE", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", " ", "NumChan"}], "-", "1"}], ",", 
         RowBox[{"NumChan", "+", "NumClosed", "+", "2"}]}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"dgdk", "[", 
        RowBox[{"L", ",", "ko", " ", ",", "r"}], "]"}], 
       FractionBox["1", 
        RowBox[{"2", "ko"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmatdE", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", " ", "NumChan"}], ",", 
         RowBox[{"NumChan", "+", "NumClosed", "+", "1"}]}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"ddfdk", "[", 
         RowBox[{"L", ",", "ko", ",", " ", "r"}], "]"}]}], " ", 
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{"2", "ko"}]], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmatdE", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"2", " ", "NumChan"}], ",", 
         RowBox[{"NumChan", "+", "NumClosed", "+", "2"}]}], "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"ddgdk", "[", 
        RowBox[{"L", ",", "ko", " ", ",", "r"}], "]"}], " ", 
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{"2", "ko"}]], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Pick", " ", "the", " ", "open", " ", "channel", " ", "cosine", " ", 
       "amplitude", " ", "to", " ", "be", " ", "1"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"ABmat", "[", 
         RowBox[{"[", 
          RowBox[{"SizeAB", ",", 
           RowBox[{"NumChan", "+", "NumClosed", "+", "1"}]}], "]"}], "]"}], 
        "=", "1"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Pick", " ", "the", " ", "first", " ", "closed", " ", "channel", " ", 
        "to", " ", "have", " ", 
        SubscriptBox["a", "1"]}], "=", "1"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ABmat", "[", 
       RowBox[{"[", 
        RowBox[{"SizeAB", ",", 
         RowBox[{"NumChan", "+", "1"}]}], "]"}], "]"}], "=", "1"}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"bvec", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "SizeAB"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bvec", "[", 
       RowBox[{"[", "SizeAB", "]"}], "]"}], "=", "1"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"ABmat", ",", "bvec", ",", "ABmatdE"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.703521975863229*^9, 3.703521982631967*^9}, {
   3.7035220491992893`*^9, 3.703522113666297*^9}, {3.7035221641720457`*^9, 
   3.703522175966065*^9}, {3.703522214906663*^9, 3.70352253956649*^9}, {
   3.703522590739478*^9, 3.7035226178621264`*^9}, {3.703522744930208*^9, 
   3.703522747016499*^9}, {3.703522826605423*^9, 3.7035229011189833`*^9}, {
   3.703522997675642*^9, 3.703523038231843*^9}, {3.703523081468405*^9, 
   3.70352311009261*^9}, {3.703523175419939*^9, 3.7035232059694643`*^9}, {
   3.703523238623496*^9, 3.7035232499452543`*^9}, 3.703523310582932*^9, {
   3.738595750753263*^9, 3.738595954174116*^9}, {3.738595987306991*^9, 
   3.738596039505969*^9}, {3.7385960735294333`*^9, 3.7385961378305063`*^9}, {
   3.738596188189763*^9, 3.738596190373855*^9}, {3.738596561363368*^9, 
   3.7385965746226597`*^9}, {3.738596607197515*^9, 3.73859664907722*^9}, {
   3.7385967212927027`*^9, 3.7385967238369904`*^9}, {3.738599255758327*^9, 
   3.738599282067741*^9}, {3.73860401216918*^9, 3.7386040589963818`*^9}, {
   3.7386041066518784`*^9, 3.738604146049451*^9}, {3.7386041795869703`*^9, 
   3.738604197470443*^9}, {3.738604232486274*^9, 3.738604233397303*^9}, {
   3.7386053813252068`*^9, 3.738605402967648*^9}, {3.738605435153495*^9, 
   3.738605571536072*^9}, {3.7386056093462276`*^9, 3.738605640319665*^9}, {
   3.7386057313555*^9, 3.7386058834365587`*^9}, {3.738631756730215*^9, 
   3.73863177491173*^9}, 3.738669303370432*^9, 3.738669486274898*^9, {
   3.738669629295588*^9, 3.7386696347531853`*^9}, {3.738670399036972*^9, 
   3.7386704268743877`*^9}, {3.738670952593506*^9, 3.738671036212987*^9}, {
   3.738671474867362*^9, 3.73867147588105*^9}, {3.7386715795687838`*^9, 
   3.738671591279357*^9}, {3.738671634106501*^9, 3.738671648168851*^9}, {
   3.738706735231653*^9, 3.738706736556364*^9}, {3.738801069311078*^9, 
   3.7388010741907578`*^9}, {3.738801105053371*^9, 3.738801110613043*^9}, {
   3.73902935291654*^9, 3.739029503561894*^9}, {3.739029540887054*^9, 
   3.73902955507609*^9}, {3.739029756133224*^9, 3.739029776384074*^9}, {
   3.739032235780826*^9, 3.739032385601574*^9}, {3.73906756249513*^9, 
   3.73906756375668*^9}, {3.739192537877116*^9, 3.739192580050323*^9}, {
   3.739193273102626*^9, 3.739193276886262*^9}}],

Cell["\<\
A module to calculate observables from the solution to the linear equation\
\>", "Text",
 CellChangeTimes->{{3.74723934866997*^9, 3.747239362435261*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SolutionData", "[", 
   RowBox[{
   "NumChan_", ",", "NumOpen_", ",", "\[Epsilon]thresh_", ",", "sols_", ",", 
    "solsE_", ",", "L_", ",", "r_", ",", "Energy_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ascat", ",", "sigma", ",", "aclose", ",", "aLsqr", ",", "norm", ",", 
      "\[Delta]Over\[Pi]", ",", "coef", ",", "\[Sigma]", ",", "i", ",", "j", 
      ",", "\[Delta]", ",", "SizeAB", ",", "tandel", ",", "dsdE", ",", 
      "timedelay"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SizeAB", "=", 
      RowBox[{
       RowBox[{"2", "NumChan"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tandel", "=", 
      RowBox[{
       RowBox[{"sols", "[", 
        RowBox[{"[", "SizeAB", "]"}], "]"}], "/", 
       RowBox[{"sols", "[", 
        RowBox[{"[", 
         RowBox[{"SizeAB", "-", "1"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ascat", "=", 
      RowBox[{
       RowBox[{"-", "tandel"}], "/", 
       SqrtBox["Energy"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"norm", "=", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"sols", "[", 
           RowBox[{"[", 
            RowBox[{"SizeAB", "-", "1"}], "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"sols", "[", 
           RowBox[{"[", "SizeAB", "]"}], "]"}], "2"]}]]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"ArcTan", "[", "tandel", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]Over\[Pi]", "=", 
      RowBox[{"\[Delta]", "/", "\[Pi]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"aclose", "=", 
      RowBox[{"sols", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"NumChan", "+", "1"}], ";;", 
         RowBox[{
          RowBox[{"2", "NumChan"}], "-", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"coef", "=", 
      RowBox[{"sols", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "NumChan"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"aLsqr", "=", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Delta]", "]"}], "2"]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Sigma]", "=", 
      FractionBox[
       RowBox[{"4", "\[Pi]", " ", "aLsqr"}], "Energy"]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dsdE", "=", 
      RowBox[{"solsE", "[", 
       RowBox[{"[", "SizeAB", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"timedelay", "=", 
      RowBox[{"2", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Delta]", "]"}], "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], 
           SuperscriptBox[
            RowBox[{"sols", "[", 
             RowBox[{"[", 
              RowBox[{"SizeAB", "-", "1"}], "]"}], "]"}], "2"]], 
          RowBox[{"solsE", "[", 
           RowBox[{"[", 
            RowBox[{"SizeAB", "-", "1"}], "]"}], "]"}], 
          RowBox[{"sols", "[", 
           RowBox[{"[", "SizeAB", "]"}], "]"}]}], "+", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"sols", "[", 
            RowBox[{"[", 
             RowBox[{"SizeAB", "-", "1"}], "]"}], "]"}]], "dsdE"}]}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "ascat", ",", "\[Delta]Over\[Pi]", ",", "aLsqr", ",", "norm", ",", 
       "timedelay"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.702995681603047*^9, 3.702995972209721*^9}, {
   3.7029960717985373`*^9, 3.70299617957555*^9}, {3.7029963423403683`*^9, 
   3.702996434083847*^9}, {3.7029966692555313`*^9, 3.7029967120377283`*^9}, {
   3.702996837415201*^9, 3.7029968395489273`*^9}, {3.702996909283922*^9, 
   3.702996921147928*^9}, 3.702997370722517*^9, {3.70301084037175*^9, 
   3.703010845685616*^9}, {3.703285845057654*^9, 3.703285883396896*^9}, {
   3.703287387901053*^9, 3.703287401359026*^9}, {3.7032876874566727`*^9, 
   3.7032876899566927`*^9}, {3.7032877475194483`*^9, 3.703287757390132*^9}, {
   3.703440124243266*^9, 3.703440272572953*^9}, {3.703440351052463*^9, 
   3.70344038198731*^9}, {3.703440416595827*^9, 3.703440442257718*^9}, {
   3.7035171005974407`*^9, 3.703517198913252*^9}, {3.7035172741679373`*^9, 
   3.703517298021356*^9}, {3.703517330064322*^9, 3.703517359469268*^9}, {
   3.704549079879551*^9, 3.704549083405631*^9}, {3.738596847561305*^9, 
   3.738596892567482*^9}, {3.738596959598936*^9, 3.738596981886344*^9}, {
   3.738606152618002*^9, 3.738606172527651*^9}, {3.7386062918244047`*^9, 
   3.738606301758312*^9}, {3.738674024030098*^9, 3.7386740243964663`*^9}, {
   3.738840842001587*^9, 3.738840866615633*^9}, {3.73884753072663*^9, 
   3.73884756555616*^9}, {3.738847794710804*^9, 3.738847812603847*^9}, {
   3.738847843729042*^9, 3.7388478629155912`*^9}, {3.738847929290234*^9, 
   3.7388479458579903`*^9}, {3.739018171830793*^9, 3.739018173064596*^9}, {
   3.73902957343151*^9, 3.739029577117111*^9}, {3.739030351866661*^9, 
   3.7390303567757397`*^9}, {3.7390396394521008`*^9, 3.739039646975444*^9}, {
   3.739039686720294*^9, 3.7390396891642714`*^9}, {3.739039725374648*^9, 
   3.73903972558797*^9}, {3.739040620457922*^9, 3.7390406279184313`*^9}, {
   3.739040701705649*^9, 3.7390407051675367`*^9}, {3.739066317597266*^9, 
   3.739066364036015*^9}, {3.7390665579537582`*^9, 3.739066564802322*^9}, {
   3.73906672683499*^9, 3.7390667272886753`*^9}, {3.739066770205778*^9, 
   3.739066781336687*^9}, {3.739099573027671*^9, 3.739099583772537*^9}, {
   3.739126749319401*^9, 3.739126756358131*^9}, 3.739191719626769*^9, {
   3.7391917973445673`*^9, 3.7391918002946463`*^9}, {3.7391922037699947`*^9, 
   3.7391922655307493`*^9}, {3.739192753905386*^9, 3.73919275763935*^9}}],

Cell["A module to solve the linear problem at one energy point", "Text",
 CellChangeTimes->{{3.7472393657173977`*^9, 3.747239386194449*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnergyPoint", "[", 
   RowBox[{
   "NumChan_", ",", "NumOpen_", ",", "L_", ",", "rmatch_", ",", 
    "\[CapitalLambda]_", ",", "U_", ",", "\[Epsilon]th_", ",", "Energy_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[CapitalPhi]", ",", "d\[CapitalPhi]", ",", "d\[CapitalPhi]dE", ",", 
      "dd\[CapitalPhi]dE", ",", "AB", ",", "ABdE", ",", "b", ",", "sols", ",",
       "solsE", ",", "data", ",", "cvec"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[CapitalPhi]", ",", "d\[CapitalPhi]", ",", "d\[CapitalPhi]dE", ",", 
        "dd\[CapitalPhi]dE"}], "}"}], "=", 
      RowBox[{"Make\[CapitalPhi]Mat", "[", 
       RowBox[{
       "NumChan", ",", "L", ",", "\[CapitalLambda]", ",", "U", ",", "Energy", 
        ",", "rmatch"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"AB", ",", "b", ",", "ABdE"}], "}"}], "=", 
      RowBox[{"SetupABMatNew", "[", 
       RowBox[{
       "NumChan", ",", "NumOpen", ",", "\[Epsilon]th", ",", "\[CapitalPhi]", 
        ",", "d\[CapitalPhi]", ",", "d\[CapitalPhi]dE", ",", 
        "dd\[CapitalPhi]dE", ",", "L", ",", "rmatch", ",", "Energy"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sols", "=", 
      RowBox[{"LinearSolve", "[", 
       RowBox[{"AB", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cvec", " ", "=", 
      RowBox[{"-", " ", 
       RowBox[{"ABdE", ".", "sols"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"solsE", "=", 
      RowBox[{"LinearSolve", "[", 
       RowBox[{"AB", ",", "cvec"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"SolutionData", "[", 
       RowBox[{
       "NumChan", ",", "NumOpen", ",", "\[Epsilon]th", ",", "sols", ",", 
        "solsE", ",", "L", ",", "rmatch", ",", "Energy"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "data"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.703441140578846*^9, 3.703441322338105*^9}, {
  3.70344141477437*^9, 3.7034415446197*^9}, {3.703523283991661*^9, 
  3.70352328430818*^9}, {3.705256144915646*^9, 3.70525614991521*^9}, {
  3.738597005776864*^9, 3.738597017289735*^9}, {3.738597060816917*^9, 
  3.738597188021537*^9}, {3.738597303309314*^9, 3.738597339844575*^9}, {
  3.738631372458949*^9, 3.738631375273696*^9}, {3.738631824889309*^9, 
  3.738631827302885*^9}, {3.738673939836186*^9, 3.738673941203991*^9}, {
  3.7386754207196083`*^9, 3.738675444413704*^9}}],

Cell["The transcendental equation for the bound-state sector...  ", "Text",
 CellChangeTimes->{{3.7472393883649673`*^9, 3.747239404393908*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BSTEQ", "[", 
   RowBox[{
   "Energy_", ",", "\[CapitalLambda]_", ",", "U_", ",", "L_", ",", 
    "\[Epsilon]th_", ",", "rmatch_", ",", "NumClosed_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "i", ",", "j", ",", "Gmat", ",", "\[CapitalPhi]", ",", "d\[CapitalPhi]", 
      ",", "d\[CapitalPhi]dE", ",", "dd\[CapitalPhi]dE", ",", "\[Kappa]", ",",
       "BSMAT"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Gmat", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "NumClosed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "NumClosed"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Kappa]", "=", 
          SqrtBox[
           RowBox[{
            RowBox[{"\[Epsilon]th", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", "Energy"}]]}], ";", 
         RowBox[{
          RowBox[{"Gmat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "i"}], "]"}], "]"}], "=", 
          FractionBox[
           RowBox[{"dgb", "[", 
            RowBox[{"L", ",", " ", "\[Kappa]", " ", ",", "rmatch"}], "]"}], 
           RowBox[{"gb", "[", 
            RowBox[{"L", ",", "\[Kappa]", ",", "rmatch"}], "]"}]]}]}], ")"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NumClosed"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[CapitalPhi]", ",", "d\[CapitalPhi]", ",", "d\[CapitalPhi]dE", ",", 
        "dd\[CapitalPhi]dE"}], "}"}], "=", 
      RowBox[{"Make\[CapitalPhi]Mat", "[", 
       RowBox[{
       "NumClosed", ",", "L", ",", "\[CapitalLambda]", ",", "U", ",", 
        "Energy", ",", "rmatch"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"BSMAT", "=", 
      RowBox[{"d\[CapitalPhi]", "-", 
       RowBox[{"Gmat", ".", "\[CapitalPhi]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Det", "[", "BSMAT", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.738630787857214*^9, {3.738670442872601*^9, 3.73867047284571*^9}, {
   3.7386705950051737`*^9, 3.738670616310905*^9}, {3.738674512739069*^9, 
   3.738674522255027*^9}, {3.738674724742749*^9, 3.738674727244729*^9}, 
   3.738674888228264*^9, {3.7387201974303207`*^9, 3.738720235608177*^9}, {
   3.738772854808206*^9, 3.738772870507008*^9}, {3.738792448777162*^9, 
   3.738792503382389*^9}, {3.73879334339086*^9, 3.738793384284658*^9}, {
   3.7387967135947723`*^9, 3.7387967306732388`*^9}, {3.73879679023763*^9, 
   3.738796811381287*^9}, {3.738796873691153*^9, 3.738796890432708*^9}, {
   3.738796943816102*^9, 3.738796944574604*^9}, {3.738797203318656*^9, 
   3.7387972036358852`*^9}, 3.738801111771926*^9, {3.738809719904245*^9, 
   3.738809752401122*^9}, {3.739029311242968*^9, 3.739029330040204*^9}}],

Cell["Set up the parameters for the \[OpenCurlyDoubleQuote]simple example\
\[CloseCurlyDoubleQuote]", "Text",
 CellChangeTimes->{{3.747239411331781*^9, 3.74723942442513*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NCHAN", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dopen", "=", "50.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", "200.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cij", "=", "5.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D0", "=", "50.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumOpen", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rmatch", "=", "1.0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.738630804511993*^9, 3.738630810537471*^9}, {
   3.738630871341975*^9, 3.738630878500389*^9}, {3.738631074928067*^9, 
   3.738631081734703*^9}, {3.738631299630268*^9, 3.738631302820063*^9}, {
   3.738631381195829*^9, 3.738631414027103*^9}, 3.7386318002066193`*^9, {
   3.738631902716134*^9, 3.7386319061059723`*^9}, {3.738631978690572*^9, 
   3.7386319818466377`*^9}, {3.73867064638266*^9, 3.738670652430489*^9}, {
   3.738671129823723*^9, 3.738671151411961*^9}, {3.7386716650363626`*^9, 
   3.738671699766243*^9}, {3.738671898052144*^9, 3.738671898225998*^9}, {
   3.738673057771873*^9, 3.738673061178988*^9}, 3.738673886761262*^9, {
   3.738674756277988*^9, 3.73867475862881*^9}, {3.7386749693478527`*^9, 
   3.738674970547739*^9}, {3.738679779720763*^9, 3.7386797798221607`*^9}, {
   3.7387065567740602`*^9, 3.73870655890312*^9}, {3.738706924953363*^9, 
   3.738706925446775*^9}, {3.738707350820785*^9, 3.738707352385618*^9}, {
   3.7387199810450783`*^9, 3.738719983201898*^9}, {3.738720323026532*^9, 
   3.738720338463663*^9}, {3.7387734237172728`*^9, 3.7387734240208273`*^9}, {
   3.738773510189886*^9, 3.7387735360904617`*^9}, {3.7387923124152403`*^9, 
   3.738792312805393*^9}, {3.738793249939783*^9, 3.738793250003375*^9}, {
   3.738793519401526*^9, 3.738793523807372*^9}, {3.738795072571404*^9, 
   3.73879507345529*^9}, {3.738795507436805*^9, 3.7387955084508553`*^9}, {
   3.7387965912439127`*^9, 3.738796593175522*^9}, {3.738797126094199*^9, 
   3.7387971274420643`*^9}, {3.738797260503901*^9, 3.738797262773251*^9}, {
   3.7387978918620787`*^9, 3.738797892459203*^9}, {3.738798122504991*^9, 
   3.738798171341497*^9}, {3.738798401518903*^9, 3.7387984032453136`*^9}, {
   3.738798816261435*^9, 3.7387988163517838`*^9}, {3.7388414914772177`*^9, 
   3.738841491579117*^9}, {3.738842669181364*^9, 3.738842669290206*^9}, {
   3.738846715260519*^9, 3.73884673237158*^9}, {3.738846829608582*^9, 
   3.738846832423868*^9}, {3.738846872971801*^9, 3.7388468761204367`*^9}, {
   3.738847617048559*^9, 3.738847619406177*^9}, {3.738847665869307*^9, 
   3.738847666554976*^9}, {3.7388479796739683`*^9, 3.738847985303372*^9}, {
   3.738884585772254*^9, 3.7388845898595057`*^9}, {3.7388846313244267`*^9, 
   3.738884635347859*^9}, {3.738931634354786*^9, 3.7389316344603863`*^9}, {
   3.73893167622414*^9, 3.738931706031782*^9}, 3.73893181119376*^9, {
   3.738931991277088*^9, 3.738931991498562*^9}, {3.738932068024226*^9, 
   3.738932068463711*^9}, {3.73893216452873*^9, 3.73893216464645*^9}, {
   3.738932297430643*^9, 3.738932297525896*^9}, {3.738934333080119*^9, 
   3.738934335950289*^9}, {3.7389400802557163`*^9, 3.738940112541046*^9}, 
   3.7390298905703497`*^9, {3.7390326595193872`*^9, 3.7390326600926743`*^9}, {
   3.739032707753484*^9, 3.739032711038577*^9}, 3.739033087342228*^9, {
   3.739035894587759*^9, 3.739035894987007*^9}, {3.739036349742104*^9, 
   3.73903635014939*^9}, 3.739067407768512*^9, 3.7470835894627*^9, {
   3.7470837054880877`*^9, 3.747083708342161*^9}, 3.7472386845525618`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[CapitalLambda]", ",", "U", ",", "\[Epsilon]th", ",", "V", ",", "UC", 
     ",", "\[CapitalLambda]C"}], "}"}], "=", 
   RowBox[{"SetupPotentialTriDiag", "[", 
    RowBox[{"NCHAN", ",", "D0", ",", "\[CapitalDelta]", ",", "cij"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"emin", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"emax", " ", "=", "199.9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nume", "=", "5000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Egrid", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"\[Epsilon]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "emin", ",", "emax", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"emax", "-", "emin"}], ")"}], "/", "nume"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.747083615629002*^9, {3.7470842750007257`*^9, 3.7470842795661087`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"padding", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100", ",", "45"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"80", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgsize", "=", 
   RowBox[{"{", 
    RowBox[{"600", ",", "300"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yrange", "=", "All"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xrange", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "200"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aspctratio", "=", "Full"}], ";", 
  RowBox[{"1", "/", "GoldenRatio"}], ";"}]}], "Input",
 CellChangeTimes->{3.747083632350075*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DataTable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       RowBox[{"EnergyPoint", "[", 
        RowBox[{
        "NCHAN", ",", "NumOpen", ",", "L", ",", "rmatch", ",", 
         "\[CapitalLambda]", ",", "U", ",", "\[Epsilon]th", ",", 
         "\[Epsilon]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "Egrid"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Delta]table", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Egrid", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"DataTable", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Egrid", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Delta]table", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
       RowBox[{"\[Delta]table", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}], 
      "\[GreaterEqual]", "0.2"}], ",", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Delta]table", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "2"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"\[Delta]table", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "2"}], "]"}], "]"}], "+", "\[Pi]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"i", "+", "1"}], ",", "nume"}], "}"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "nume"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Delta]table", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
       RowBox[{"\[Delta]table", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}], "\[LessEqual]", 
      RowBox[{"-", "0.5"}]}], ",", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Delta]table", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "2"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"\[Delta]table", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "2"}], "]"}], "]"}], "-", "\[Pi]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"i", "+", "1"}], ",", "nume"}], "}"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "nume"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]interp", "=", 
  RowBox[{"Interpolation", "[", "\[Delta]table", "]"}]}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"2", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Delta]interp", "[", "x", "]"}], ",", "x"}], "]"}]}], "]"}],
     "/.", 
    RowBox[{"x", "\[Rule]", "\[Epsilon]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "0.1", ",", "199"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.747083652089028*^9, {3.747083784562179*^9, 3.7470837864068623`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{{}, {}, 
                  TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAkIBAatKZuT+hJi70WqLRv8/Qs9tT
2wpAZB0lUG069780hmDZd40bQDMk9XjjDPy/fuoZZNReJEB/3jxL1lb7vx0W
1r3P1SpAiC2yJE+f+r+4jp5diOwwQE8cv2t2sPu/oT4lnUEyNEBjbghBT8n8
v2Rcga4dvjdA8l8U0o/+0L9EvAYxazk7QDGN0ur5m+M/Y0hfdNF4PkA1iRQP
MhHjPy6hxkQt/0BAHtSjNPLJBkBKNMcv/qNCQC74W5DiEglAdGhc04dAREC8
BvyaLWAIQItT3N8iAEZAsdljHsN1B0DC1MVMyqFHQCd0DmytqgZA5gyaIoNm
SUDZpuVZx/EFQBjmArH0IktAOPntvhFpBUBqVdWfcsFMQLPM0T/bFQVAqXuS
9wGDTkC7AF+Y7OsEQASc3NdOE1BA3SBZMsDsBECqVWVopfZQQHwaCGZBDQVA
2F84VdjVUUA4K2ytbD8FQBU1QHIRplJA2g+tq855BUDJZb1D04dTQFnO+V9X
5QVAjGFvRZtaVECAp0xT3M0HQNeta6M/KVVAFrW4o9qnFUCYVd21bAlWQA6+
77n9khZAaciD+J/aVkChtvRV+8YXQLGWn+9bvVdAAgRGfa7hIECAtQVD9JtY
QM7JhFp0ByFAX5+gxpJrWUDQGOYTNf8gQLTksP65TFpA7tngxaHsIEAZ9fVm
5x5bQNRoqgZ+2CBABVaFK/HsW0ACkj5pYsQgQGgSiqSDzFxAijBaw4SvIEDa
mcNNHJ1dQMFIAI/JnSBAw3xyqz1/XkCuyn/RI40gQLwqVjllUl9Af2O0nHeA
IECeFMKRtBBgQNsJpMIFdyBAmcET4fqAYEA+iLI1R3AgQBzUf0jE6WBAf54v
SEltIEBalCYKUlthQBmOzfGKbSBA3Hzy+c3KYUBsKnZrPXEgQObK2AHNMmJA
sHySFQF4IECrxvljkKNiQAfJlma2hCBA+Cc13tYMY0B7kEGZuJ0gQImxlYYL
dGNA/0k9vCsSIUDV6DCJBORjQGoltWmoWSZAqYXmo4BMZEDIby9jK7QmQDjQ
1hjBvWRAV3K9PszNKUALQ+y77yxlQDB0cgJckixAZhscd6GUZUA+jC0OlKss
QHyhhowXBWZARPZDnIGvLEAajQu6EG5mQAwQbW05rCxAcybLQc7fZkA4tY+1
BqUsQBDor/d5T2dAawxEa92bLEA1D6/FqLdnQMGueLA/kixAFeTo7ZsoaED1
Aj7LQ4csQH0ePS4SkmhAe0EBb/V8LEDwt7LFzPxoQP3o282Nr/e/okG14Q==

                    "]]}, 
                   Annotation[#, 
                    "Charting`Private`Tag$1166555#1"]& ]}}, {}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, DisplayFunction -> Identity, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0.1, 199.9}, {-1.7991478481625556`, 
                 14.342785723968639`}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.1`", ",", "199.9`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{{}, {}, 
                  TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAkIBAatKZuT+hJi70WqLRv8/Qs9tT
2wpAZB0lUG069780hmDZd40bQDMk9XjjDPy/fuoZZNReJEB/3jxL1lb7vx0W
1r3P1SpAiC2yJE+f+r+4jp5diOwwQE8cv2t2sPu/oT4lnUEyNEBjbghBT8n8
v2Rcga4dvjdA8l8U0o/+0L9EvAYxazk7QDGN0ur5m+M/Y0hfdNF4PkA1iRQP
MhHjPy6hxkQt/0BAHtSjNPLJBkBKNMcv/qNCQC74W5DiEglAdGhc04dAREC8
BvyaLWAIQItT3N8iAEZAsdljHsN1B0DC1MVMyqFHQCd0DmytqgZA5gyaIoNm
SUDZpuVZx/EFQBjmArH0IktAOPntvhFpBUBqVdWfcsFMQLPM0T/bFQVAqXuS
9wGDTkC7AF+Y7OsEQASc3NdOE1BA3SBZMsDsBECqVWVopfZQQHwaCGZBDQVA
2F84VdjVUUA4K2ytbD8FQBU1QHIRplJA2g+tq855BUDJZb1D04dTQFnO+V9X
5QVAjGFvRZtaVECAp0xT3M0HQNeta6M/KVVAFrW4o9qnFUCYVd21bAlWQA6+
77n9khZAaciD+J/aVkChtvRV+8YXQLGWn+9bvVdAAgRGfa7hIECAtQVD9JtY
QM7JhFp0ByFAX5+gxpJrWUDQGOYTNf8gQLTksP65TFpA7tngxaHsIEAZ9fVm
5x5bQNRoqgZ+2CBABVaFK/HsW0ACkj5pYsQgQGgSiqSDzFxAijBaw4SvIEDa
mcNNHJ1dQMFIAI/JnSBAw3xyqz1/XkCuyn/RI40gQLwqVjllUl9Af2O0nHeA
IECeFMKRtBBgQNsJpMIFdyBAmcET4fqAYEA+iLI1R3AgQBzUf0jE6WBAf54v
SEltIEBalCYKUlthQBmOzfGKbSBA3Hzy+c3KYUBsKnZrPXEgQObK2AHNMmJA
sHySFQF4IECrxvljkKNiQAfJlma2hCBA+Cc13tYMY0B7kEGZuJ0gQImxlYYL
dGNA/0k9vCsSIUDV6DCJBORjQGoltWmoWSZAqYXmo4BMZEDIby9jK7QmQDjQ
1hjBvWRAV3K9PszNKUALQ+y77yxlQDB0cgJckixAZhscd6GUZUA+jC0OlKss
QHyhhowXBWZARPZDnIGvLEAajQu6EG5mQAwQbW05rCxAcybLQc7fZkA4tY+1
BqUsQBDor/d5T2dAawxEa92bLEA1D6/FqLdnQMGueLA/kixAFeTo7ZsoaED1
Aj7LQ4csQH0ePS4SkmhAe0EBb/V8LEDwt7LFzPxoQP3o282Nr/e/okG14Q==

                    "]]}, 
                   Annotation[#, 
                    "Charting`Private`Tag$1166555#1"]& ]}}, {}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, DisplayFunction -> Identity, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0.1, 199.9}, {-1.7991478481625556`, 
                 14.342785723968639`}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.1`", ",", "199.9`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.1, 199.9}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.747083663945545*^9, 3.747083798146325*^9, {3.747084059373087*^9, 
   3.747084083313924*^9}, 3.747238865586965*^9, 3.76079284130892*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVi2s01AkcQOnhPzMG45VHNe83lVaUlH6VlBBNdhQqVKhophC7sZP0EMmj
GpRXtkgrqbalvH5lEclRRjmRxoaUKKcSsVr74Z577ofLCpBJ9szQ0NCQTvO/
tSXjHzVldHi3nJr4kc5Go4hwUXcKHWR1bTHqMDMUV+zLUqro8KYk7nDfRmNc
pemv527KgB8C9+EZXoboud7rGOHLgOM0BimFZoD7kty+1uQyYHp88Zyhj4q2
tcFRbxhg3WAnjwugYRM1OzTDkAkx2os1TJL1sH2RaWG4DRO8iyJsDyboolpy
Tu3hxQTqo21HJq7r4PsIXfMFvzAhpLrqXf4AFZ0q2vqaMpggP0mMhW2g4u8a
mbeCy5lw7eeoqO33tFHDaUeMVgcTrDiT158s00bfRI7zlW9MMNqv/Fb3NwXL
WweM1piw4Jr/1HCJDwWN55SoX9uywG1kx+rVk2Q85BNWHCNlwSb1UJ/sKhlb
8pZFzT3MgnWGbI3tUjKK+/9de+8CC1b8mr1uky4ZT1nU6nndZYFZ3pfWgmYS
9srjO7+oWBBzoLhdnUJC+MutMO0LC1xS8xtOe5Mwe8IgzMqIDY8EWvEOIhJ+
hw6HFms2FPCdzxdNEig9mU0J2cKG292vShUqAu88DnhODmMDK0LySlFKIE1f
mF+YxobOloDPshQCQ6RDoetus8HRubxnfjiBjZdu2715ygbN5zUMXx8C+T2R
s2NHpv/esbqZTgQe4698StfnQFRuus+INYGv98/IrrTiwMwLMy1n8whccash
2NuDA6E1BSVcMwIzRs8sGZNxIMP/vYctjcAv9hINZTIHWPl/NvIoBG6ONWm2
vsmBzweVqm4tAkvqu9KftnBAv8TWVTLdFGr+LtkwBybGBwPlJAIDNwct0tHl
wkEWeC7UIbBWaTlxfQEX8oKa7Y8aEcjsGqnf4MaFx2o76k46gdGssrT+EC6I
Psg31YoJ7AiM3nH8DBdeDjhpFdoRaFO8Wswu5oLmh+QjJBcC00a0Rmsec8Gm
MZvUu4PAYdvmB9sHuVDse3qvfQSBLtGpSRMUHqxlZRnpniXw2gPptkwxD1QJ
pkv8iwicRczjLd3Ig1S6VsrSBgL9XXs+qfbyYLHBlq7MtwRWpxZUHjrNg5dz
21PPUkho/mJ/PK2IBy1DTYvYViSMnLfYs+QRDxQW54P9tpJQ5T/KcB3ggeWe
ZMIrjoRWhRWD7wg+pN1vLzG7RcKkD0fLTgn4QOVdsrjfQ0KnSG332kA+SHUb
peMuZMyvbDX3P8mH202q6tYTZPyhqeyfusqHmtrL88cekrH8DPO35X18qG5K
ePtqPQWNnvU5d8wSwLNPQ5kTyRQ8aPKH8WGuADzlDToWXRQU59vcuLVLAB6J
Lt9aY7Xx5NvvUe5xAqj3dhAMdmrjG0t0HMoXQHzQkOdueyrCoRO0xIcC6KUv
T7+ZR8Wsso1dwn8EkJAEkd5UHRyf1LtWrykEdJO8nqXQQema9rDdLCG0qXNH
w8Z1UO/JTu08PyEcuBciCyXrIbdMYZCrEEJvj1rimaOHyy/nmuXkCKHqxsrY
GgYNPRJrmNlVQrifOSSJjKRhYMRrQVaXEO5U+8qVL2gYvfPHwksTQjC8Wer6
eLU+pjozbC+ai6CC/ZPMs1wfC6xXrcy0E8Eddf9VqYMBVs7f6ZixVQSq2aZL
vDsM8BmhcEmPFMH10fCBLUmGODCSI1EqRVAc+72/MNgIpzqrt124K4KPukWO
5gpjNKzv9juvEkGZsln1cXIOCkungs59FkHf14jaD35m6HCRLkszEMOBlqrS
XCoTrwQkyutMxeAR2uYeyubif7iPaV8=
       "]], LineBox[CompressedData["
1:eJwBsQRO+yFib1JlAgAAAEoAAAACAAAAEJiTquAlNEA5IyE61DoiwBrT0bJT
MzRAI080z/DrFsDpnB99I0Q0QHNJ/xpfoRPA4HeSENRTNEDzGVbt1twRwNhS
BaSEYzRAtbPEOdmTEMDQLXg3NXM0QEQIk0vDGw/AyAjryuWCNEDTqyvXl2MN
wMDjXV6WkjRABbLVudfkC8C3vtDxRqI0QEVsgjGAjwrArplDhfexNEARqjT7
ilkJwKZ0thiowTRA9QLfKNc7CMCeTymsWNE0QG8yALGOMQfAliqcPwnhNEAU
tMnW3DYGwIXggWZqADVArsS8XeNlBMBkTE20LD81QJDyjVtQJAHAXCfAR91O
NUBdL03lEGEAwFMCM9uNXjVABP3WTPJC/79CuBgC7301QMYi/ym8VPy/ISTk
T7G8NUCPO/6GOZz2v977eus1OjZA2qFzZggR5r/W1u1+5kk2QHBM+yryDOO/
zbFgEpdZNkAEFSgd0vvfv7xnRjn4eDZAH+f9gKZ907+b0xGHurc2QLzUf16B
MLo/kq6EGmvHNkB/GpRjpHfKP4qJ960b1zZA9mmIcwry0z96P93UfPY2QDQl
dFwtpOA/chpQaC0GN0CxG9WZfePjP2n1wvvdFTdAS2WM8/cF5z9g0DWPjiU3
QASkfBin+uk/WKuoIj81N0ASSgJfi7LsP1CGG7bvRDdAsW0cSsAV7z9HYY5J
oFQ3QCf1SRRlifA/PjwB3VBkN0Bb+xprSUjxPzYXdHABdDdA9NEOpHPA8T8u
8uYDsoM3QAVqjaJ/6vE/Js1Zl2KTN0CoCrGQxMTxPx6ozCoTozdARgVOpMRQ
8T8Vgz++w7I3QNGe7pydlfA/DF6yUXTCN0AZc9En7zTvPwQ5JeUk0jdAS7Rq
qFnX7D/8E5h41eE3QC+3AEVFJOo/9O4KDIbxN0Cw2YlthjPnP+zJfZ82AThA
pMneKmYU5D/jpPAy5xA4QEXE3oH61+A/0lrWWUgwOEAIQ/gEDGTUP44KBzRJ
QThA+KsWQ6NHyj9JujcOSlI4QDKaNvOftbc/wBmZwkt0OEDmbznC2obAv67Y
WytPuDhAeXOm/GKs4b+JVuH8VUA5QJ5PQ954QfW/RAYS11ZROUD2DAsk7r72
vwC2QrFXYjlA5yferlo7+L92FaRlWYQ5QJb/4sFfM/u/ZNRmzlzIOUBvt2cH
8ZwAwCCEl6hd2TlA3IAPLOliAcDbM8iCXuo5QMgFfXcjLALAUpMpN2AMOkCr
uV0WU8sDwA5DWhFhHTpATTDFw/WiBMDJ8orrYS46QNyCszVrgQXAQFLsn2NQ
OkBIXzIR7VcHwPwBHXpkYTpAJtpYoYpTCMC3sU1UZXI6QLNwVTD8XAnAcmF+
LmaDOkDOkIORcXcKwC4RrwhnlDpA8knuINOmC8DqwN/iZ6U6QOVTOq6p8AzA
pXAQvWi2OkC10f50ylwOwGAgQZdpxzpAx3Ror472D8Ac0HFxatg6QFPUVL4Y
6BDA2H+iS2vpOkDbybtilgQSwJMv0yVs+jpAVlILeXFvE8BO3wMAbQs7QLLz
wlDocxXACo802m0cO0Aaoa1p/TkZwHY01DR7JztA4xav2P0PI8BssybY
       "]], 
      LineBox[CompressedData["
1:eJwBYQSe+yFib1JlAgAAAEUAAAACAAAA7EO6KL3aPUCtEOVKtbgjwMB3FjO/
3z1ATXU/1WFDHMDYefSqcPA9QLYyjEG2cBbA8HvSIiIBPkCjzqlvUwgUwAh+
sJrTET5A/426CxByEsAggI4ShSI+QICBEDnwPBHAOIJsijYzPkBr7VNu0j8Q
wFCESgLoQz5Apc+ynxfODsBohih6mVQ+QEMdsPCWTw3AgIgG8kplPkB9HdsH
lfYLwJiK5Gn8dT5AzGbxRxi6CsCwjMLhrYY+QGAeTMQblAnAyI6gWV+XPkC2
nD6wBYAIwOCQftEQqD5AZIJUIV96B8AQlTrBc8k+QGFF4I+2kAXAcJ2yoDkM
P0B6TH8y+BQCwDCuol/FkT9AUb2e8ilD979IsIDXdqI/QLyH1JmApfW/YLJe
TyizP0CasCCsugP0v5C2Gj+L1D9AqQKs0S2x8L94X0mPqAtAQHz/BOV/XuO/
hGA4SwEUQEAeGxx0Elbfv5BhJwdaHEBAAIM3/Ky717+oYwV/Cy1AQERDRJDr
or+/2GfBbm5OQEDfJP+19XHaP3jxQo83VkBAAeULCPhw4T8Ze8SvAF5AQHoA
opVfseU/ugRG0MllQEBE2Mw8W+zpP1qOx/CSbUBALgICn0kN7j/6F0kRXHVA
QIwmKmTn/fA/m6HKMSV9QED71fQzacfyPzwrTFLuhEBADkSmCCFR9D/ctM1y
t4xAQFaDq7HRfvU/fD5Pk4CUQEDBu+G8mj72Px3I0LNJnEBAb1E9Uxh99j++
UVLUEqRAQIpMkPnvNfY/XtvT9NurQEC+cmrlenD1P/5kVRWls0BA3MACd0M6
9D+f7tY1brtAQFKhAuHqrfI/QHhYVjfDQEBSg5xSBd/wP+AB2nYAy0BAtotU
kGnN7T+Ai1uXydJAQMTEL1JQqOk/IRXdt5LaQEBWQ/A7emzlP2Io4Pgk6kBA
0QBiU2/o2T/kTuZ6SQlBQFHABP/K6bi/6JvyfpJHQUAqyeRs1/Luv4gldJ9b
T0FAUU/GNp0Q8b8pr/W/JFdBQCbHWDv0ofK/asL4ALdmQUC3uqAMLLj1v+zo
/oLbhUFANuyu/m/L+7+McoCjpI1BQDbnNcKfUP2/LfwBxG2VQUCTtII/Vdj+
v24PBQUApUFA7BGpCLn5AMDwNQuHJMRBQOKq1JruQQTAkL+Mp+3LQUBNraF5
IiMFwDFJDsi200FA6zH5/TsNBsDS0o/of9tBQD4imOfvAQfAclwRCUnjQUCp
A6HmyAMIwBLmkikS60FAjEzrkJ0VCcCzbxRK2/JBQBkKp2GXOwrAVPmVaqT6
QUAoC1Xs6noLwPSCF4ttAkJAby2O32jbDMCUDJmrNgpCQH2uoUgiaA7ANZYa
zP8RQkD496USjBkQwNYfnOzIGUJA2VRfN0wtEcB2qR0NkiFCQBzmhwhIjRLA
FjOfLVspQkDdq7X3R4EUwLe8IE4kMUJAa4Wi2kUbGMDaaXt+lzZCQN73KbtW
TCPAKKgJ8w==
       "]], LineBox[CompressedData["
1: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

       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$1166598#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{7.608405828087153, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.747083663945545*^9, 3.747083798146325*^9, {3.747084059373087*^9, 
   3.747084083313924*^9}, 3.747238865586965*^9, 3.7607928414677563`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"palnew", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Egrid", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"DataTable", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nume"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "Black", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Dotted"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<E/(\!\(\*SuperscriptBox[\(\[HBar]\), \(2\)]\)/2\[Mu] \
\!\(\*SubsuperscriptBox[\(r\), \(0\), \(2\)]\))\>\"", ",", 
        RowBox[{"TraditionalForm", "[", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Delta]", "]"}], "2"], "]"}]}], "}"}]}], ",", 
     
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", "16", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xrange", ",", "yrange"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"600", ",", "300"}], "}"}]}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"100", ",", "45"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"60", ",", "8"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "aspctratio"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdetnew", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"BSTEQ", "[", 
      RowBox[{
      "Energy", ",", "\[CapitalLambda]C", ",", "UC", ",", "0", ",", 
       "\[Epsilon]th", ",", "rmatch", ",", 
       RowBox[{"NCHAN", "-", "1"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Energy", ",", "0", ",", 
       RowBox[{"\[Epsilon]th", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", "16", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xrange", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["10", 
            RowBox[{"-", "50"}]]}], ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "50"}]]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"50", "/", "1000"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"600", ",", "50"}], "}"}]}], ",", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"100", ",", "45"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ptdnew", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Egrid", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Log", "[", 
          RowBox[{"DataTable", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2", ",", "5"}], "]"}], "]"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nume"}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "(*", "\"\<E/(\!\(\*SuperscriptBox[\(\[HBar]\), \
\(2\)]\)/2\!\(\*SubsuperscriptBox[\(\[Mu]r\), \(0\), \(2\)]\))\>\"", "*)"}], 
       RowBox[{
       "None", ",", 
        "\"\<Ln(\!\(\*FractionBox[\(\[Tau]\\\ \[HBar]\), \(2  \[Mu]\\\ \
\*SubsuperscriptBox[\(r\), \(0\), \(2\)]\)]\))\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", "16", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xrange", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"FontOpacity", "\[Rule]", "0"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "0"}]}], "]"}], ",", "Automatic"}],
          "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"600", ",", "250"}], "}"}]}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"100", ",", "45"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"8", ",", "8"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "aspctratio"}], ",", 
     RowBox[{"ImageMargins", "\[Rule]", "0"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"p1", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "pdetnew", "}"}], ",", 
      RowBox[{"{", "ptdnew", "}"}], ",", 
      RowBox[{"{", "palnew", "}"}]}], "}"}], ",", 
    RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.747084221505007*^9, {3.747084300696886*^9, 3.7470843237108*^9}, {
   3.747084612584778*^9, 3.747084644357109*^9}, {3.747085273832849*^9, 
   3.7470852795188303`*^9}, {3.7470853457981043`*^9, 3.747085373976111*^9}, {
   3.7470854286185007`*^9, 3.747085474013348*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[{{23.119124313278082`, 9.999999999999999*^-51}, {
           23.119124313278082`, -9.999999999999999*^-51}}], 
          LineBox[{{165.82094669462865`, -9.999999999999999*^-51}, {
           165.82094669462865`, 9.999999999999999*^-51}}], 
          LineBox[{{92.36076406658496, -9.999999999999999*^-51}, {
           92.36076406658496, 9.999999999999999*^-51}}], 
          LineBox[{{32.8932626743262, -9.999999999999999*^-51}, {
           32.8932626743262, 9.999999999999999*^-51}}], 
          LineBox[{{157.0027989604523, 9.999999999999999*^-51}, {
           157.0027989604523, -9.999999999999999*^-51}}], 
          LineBox[{{82.83684126512202, 9.999999999999999*^-51}, {
           82.83684126512202, -9.999999999999999*^-51}}]},
         Annotation[#, "Charting`Private`Tag$1166980#1"]& ]}, {}, {}},
      AspectRatio->NCache[
        Rational[1, 20], 0.05],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{100, 45}, {0, 20}},
      ImageSize->{600, 50},
      LabelStyle->{16},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->NCache[{{0, 200}, {
          Rational[-1, 100000000000000000000000000000000000000000000000000], 
          Rational[
          1, 100000000000000000000000000000000000000000000000000]}}, {{0, 
         200}, {-9.999999999999999*^-51, 9.999999999999999*^-51}}],
      PlotRangeClipping->False,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[0.004583333333333334], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1: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
ApcHZ30/pqqj52PG4Caa1v//j38AJAHQ/g==
          "]], LineBox[CompressedData["
1:eJwdVgk0lWsXNkTGwnFVZGgQIqTzne+c09G346Lhlsg8JCT9KZQpmhRdQ6Vo
Iuma+TOVMpbe9yTpmiqhqzLPUw6REP5z/73WXns9a6/1rGevtfez9jo3H0sP
IQEBgcf8/LdOzLqG8zTpEHPzVXj9mbW4Q3XcWnsbHbjaceTfMwq4zuScxlFD
Ohw+6hmWkyOPy73EZ5PN6CBwr+ZlnA4NZ8ferfliQQdFH/KIhLQcvluy4YGC
Ex1e7xiNndsoi8PbHp+0OEqHQr9UDU1XGXxaeAd1zZcOfhqVVoUnV2IXrVqZ
6hA6MHMm6YM7VuB95nbdglfocLq0L85wizTeHtD3lHODDueY5UmZBlJYK/H0
laAEOqQ4jo9W7pHEq7hLNoVpdMhNbja1OC2Blw1c0xzL4+spstxYnymOJ6UU
5zRK6SClEWYE/WK40yCr1u0VHRK8Hxit1hPDDXb0pKQ6Oih4xyitCF2OX1zg
ev/TQodPfvMb5f8RxY/S9wOtiw7lyiI6uxmi+F7NF9n9I3TIcw768S1BBF/h
HeuJnKbDFvPdm92FRLCfwo9nlUt0WNk+PLjGZxl25YT9uShOQDAtNDOhQxib
u8nYseQJ8Kr4PhR0UBhzIpO0/FUIqHJjPrepEcKb8zfP52sSIL038U63sRBe
3VRSN2RAwJ0Tweg9EsSic78/3GhIwLEv/+W1GQriKdVGHxczAnwOZTHqKwRw
l4nLzvsWBLTuSRP3pATwO69RuWZHAuq83WQnwpdQRWxw78qjBByJ5D3KuL6I
ckpEi/f4ElBaLEa7E7+AEtpuRVwJIeDRuO4l74xfKEJ4nT0OJ+BhZfax/qfz
yF+LLzCGgB9t5XVFlXPIzXz7LyKBr0/QIC+haRYdCHhb75tGQCMtOsKy/yfa
kWj9V04eAc9WvhlK+zmDdLjdvv0lBGy8nyVvJTmD1gz4GK17RUDRi8AcbZUf
aLn0As2pjoCYhBmfaf1pNG0Q3Xe3hQDh8WjxC8ZTqMduVcmHTgL6Dte23LL+
jj5cSI+UGiGgpdfsb1HPSYTStzqYTRNgT5ntzQ6aQLk1L7UvLxFgWVmrtzeC
h+7z9i68EGeArkCpQ4T2OIpUaG2YoTFgtvz92waTMRTIOZpsoMKAC9kCfYrO
I+iI2/dTJzUZ4CLUqaF8aghZRIYaZxswoEohIyf60gCi8qV/6+EwYJmvTfHa
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
jrXnGnylMs3njw3bQeD/oYb/B/wBONc=
          "]], LineBox[CompressedData["
1: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
oRROxthsYgLt/0uZ/BeTv+bA
          "]], LineBox[CompressedData["
1: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
nQ+M6NaLWeWzsLkv6ajYDf7////A/wNjaXdS
          "]], LineBox[CompressedData["
1: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
F2752XuXDwTRUIX+pzM3lHCqM6va84JpqLnjcN1hTDH3+htvmfJhon8n7eTk
rhRyYcF2SU5HaFj1OGxchnsOt2jcbqnoozT4ZOYUXp+WyMm8SnStDqFBatru
MbGVscLnXl8eTgwl76tYIymh/FQo3u70CSPz55nm7PItFM4VNwzHaRh1Bm1v
vi8W9rvuyB86QcNMrw/xX+U+C59Ixo1cdIqGo45/3eQ2fhPuSSwOCA+n4fQW
1qTbvUo4Y6lUSUkEDVErfGW0zWuFbc0W5ganafhX097uOVQnTD3PhtFnaLjr
WKd/svS3cMesizV3ztLgdKB+7pd7jULT70U2bedouNZwMsnm6D/hn8N9F2ZF
0UAHDKW3JbYIEydMbg2+QPQiZLyTlGSbkHmzcWnRRaIn912snJe0C0eTOKR+
mfA/dGB70/4OYZVW7rBzNNGTcYYKteGdwqtZbetjY4i+mXxz/+zfJXRxG/ug
7grRp+5sOmBat1BPxlnNLJY8z5w3wS2jW0i6LY9dcTSYb52q87W7W3je8cnz
p/HEP4LryrC/W+jU1mAgfZ2GM0uy6uuedQs1Lhr4L7lB9N9vV5LRgm7h2znL
PpxJoEHy3F8sO90lPFkVZFp+k+BpUmSMc3KncHHI/RDjW8QPz1/58TW2QyhP
2iP3JBrWT3a1KPZpF754pzk79TYNWamRPlMmtQkP+xGC3KFh/4GgFL2PLUIQ
H6gk02BVGZ+xvPKfcDD7tn1ICg1fjsrU5ik2CZ+Kvl1/c4/Uo7paIm7aH2GA
nOqgII3gddnJoUku9cKZd23Xutynwaj7nM70k7XCjuU+96+n02Bn0bjHLr9K
mN5xTbkhgwav/4baanQqhD6XP7HTMsn47foC1J5/FpqLDfghDYr1kVaeJz8I
xdsl+Ijw50dW7ceGIuFtUj75JzT83WvTaib9TOg+Ofrdsiwa3OesqlzkdVM4
9sPriRee0lD7qtvIwSieq9k9eLgym+SNu8U7DqzM4uL1p1SOfUby0SLNormK
BdwmbvPM7RwNrlZVmHjnHTeCOXsmA2l4ZPL+4KbQT1y5Agn4uQQvYz22p8WU
cRdTOhfOz6MhMD34OZz7xq1xmhB//AUNc12HRYrePzh+97q+4nwaGoM/u0he
quaKY06s1i0kejNh96HT22q5CCKnbkU0TFSNsbg9vY4j7FW49ZLo9Yv418/+
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
          
          "]]}}, {}, {}, {{}, {}}},
      AspectRatio->Full,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"Ln(\\!\\(\\*FractionBox[\\(\[Tau]\\\\ \[HBar]\\), \\(2  \[Mu]\\\\ \
\\*SubsuperscriptBox[\\(r\\), \\(0\\), \\(2\\)]\\)]\\))\"", TraditionalForm], 
         None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{{Automatic, Automatic}, {
         Directive[FontOpacity -> 0, FontSize -> 0], Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{100, 45}, {8, 8}},
      ImageSize->{600, 250},
      LabelStyle->{16},
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 200}, {-8, 2}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[0.002777777777777778], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1: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
xvl1Gd+vmpy0jLzZ12RiaI2nc4ZyaqTCLUMM8y03mVnjI+WjnxKOnbI8yEyQ
R2uUW7892qHpiOV/9VY0a0x7eNWWZdLX0ov6E3x3tTX+4LF2jVmuZuka/qbn
vaM1Cu886Z3cvM7SYem51UMu1igwItL0yTvU0vaW8wNOd2vk6aw5rbn+oqWZ
mbiUopc1htU93JiRestSt64r0nq7NW53iVi4o7vEUpWZALvbGvnLOV7tVKy0
lJnydw3dZ42dloUna6s+WIpGEQF/2Bo9i72CRkabLPmY1yvB1uj0S+fS9ulO
S3bmcUuoNfanz3D5K36znGXKr3Br1HBKttsnOmI5wazGibZGum9qQJ3ZhOX3
HUveacZbo8IYt2+/wS/L7unPemuSrHFj8m1rAb55y//qy9Ks8ffK+wKmQwug
brkfx9lMMj6bIj2uf+SAN8Va+25et8avWq4+LsgNz5l0n2uNhy929vTQ+OFB
yzPozLdGXwlllv5AIbi9J/zW7D3SfuH3jPL0pZA1by8oXmKNZq+fNuuKi0Pa
Bf7jhs+ssflv9s3PU1KQIN/8dUOZNRac21CjdFkGzpRkrjn4xhrVQ2T3LhqW
gxOrfB8m1Fqj5AK2irWHFOEwURsFH63xDcvbMkUdFdizf+zMWzp538tUt+eq
6uDNWsrob7NGkZtK0tpbtWBzKlkwXdYIvFXH1wxqg6OKbZlsnzWWyIztCivX
/VdP990al+1ufV78TB/M1zUkejCs0f3lUYOeFkPQ60n7fWzSGvdsKnBmEzUB
tcCtvmnT1viFS9OB67gZyBI7+XDeGqcPrOXtWmAJYunD+p9YbTA3WfjCo00I
/Jr3r1CcNugUfsCrutwKFpaRgMRngwJijl+TwAbmnWG/mpANSnr+dI9osIWp
bxytK0VtkN9O02dBsB0MBb/HHVI22PD4xNAhPXvo4Um+HS5rgx9z19qasa+G
1qtEgCrZ4OXeCrlnQ2vgo45MyAt1G6w9svb6+gEHqHrd3/tZ2wZDy5+v2vTb
EV5sKlw7bWCDd4qO8i0RcvpXP2hmg+rTo9XndJ0hP9R0uR7aYD7L2cZXWzfA
DYEFUetpNuieofuj6aILXL5ZTQWstkEq6sqzn583wgXDhM1xjuTzoHUR9uqb
4Oxbl/JbLjbY2j10fCxqM4R6SKpVudmgnElsntC4GwRSPUm9W21QiU/ie8PO
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
XCfwpX9vP8W/n+djg/tZZyHRBl7BRdL/atRZGUQb8LBX+HjwbXKsEXkeA78g
m7Rv7r+wZUQb8HHX+cikPpv0iWgDz+AmH7O0/kcXkvah2/fbcvnoeGTmjEai
DXyD23x0mFJnfZC0bwA9cHWHj85WT/InkPY38A7uk+ute9L2N9ELLmwIyykk
/f2349088v4M/IPHfOyYveZ8LHm/Ik8yQp6Q582fk7CCvP9SykN4zsebboVe
c/9WweySVrMaX5LxHV21dxrpL08pH6GYj0q1avQ00p+m0QKdMtI/htl1mEP6
Gy3fTXvDxxvGppqlLZSAf/b1d37Hx+X2TXujSf804HI+8LF2eGh5Num/Y6h9
/ic+3p/y6wDbUgkGO90qPuaKXx8eSvq/wV5Pzcc3G2W3Ak2VHF9By8cvU8uf
PCLjxXD8niXxtFRwYhAZTwbewhcynva/7RlrroSeU8/eP/mVj+eW2bdp0U7J
8RcayP3aV3luIuOzU8XaYfe/8zGpacWJJgslx2P4ycdNtt/Mosl4NqT3f/Mx
9PEC775kvBv4DE18DOq6aHJuZyW0MPwnwHTfucXzuyghhG4YGwsw12FCSScS
Pxr3P1jS20SA3jLVgMfdlEBpUWdbC3BJz4z0KBJvvgzY83KsuQAXVMYMn0Xi
0VLKc2gnQNt5cNqmjxJU1/3H8jsIcKiPSW0jiV8M5TtYCtCs/Obn0n5KeOfd
Iy3QSoDd971cmGurBHq8p5W1AE9pvYWZA5Tw+kNl27juAvx19Ebq8UFKmEEP
MPQSoHCWS/8jJH7ScHCxjwBv2Ipzjg9VcjyIfgL8uW3O3ExHJVC70Ke2ArT+
fftljpOS40MMFGCI452uJSOUQO1E2MEC3Fdeb/ZtpJLjRQwl9/t1wb7uo5VA
ceNthgnwUvHRuMkk3hv4EcMFuD4xsXHDWCVQHOnAkeT/C2+kXyTfBwNPYpQA
FdnF22vHKyHZL3LrRFcBvnYfvMllghJoOuDVWAFO7iRYFzZRCXFkesB4CPBR
xBrei8lKsKC8CRCg1fMPHQZ5KSE6qMvsUE8BfihcGRE+XQkmdIE0WYCuj3xP
qHyUsI0W1EwVYGlUK57vTCX8pTyK6QKUdgyKuDlLCcHJqbY3fARod+V9H8c5
SmigfIqZAtQOeNr2xDwlrHJaurt0lgD/i7d36y9QcryKOQJUPx4Wly5SAi0H
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
bVW7uBU+Ad3PXURe999ScAL8P8NP6g4=
          "]]}}, {}, {}, {{}, {}}},
      AspectRatio->Full,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          RowBox[{
            SuperscriptBox["sin", "2"], "(", "\[Delta]", ")"}], 
          TraditionalForm], None}, {
         FormBox[
         "\"E/(\\!\\(\\*SuperscriptBox[\\(\[HBar]\\), \\(2\\)]\\)/2\[Mu] \
\\!\\(\\*SubsuperscriptBox[\\(r\\), \\(0\\), \\(2\\)]\\))\"", 
          TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{100, 45}, {60, 8}},
      ImageSize->{600, 300},
      LabelStyle->{16},
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 200}, {0, 0.9999999918561784}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7470842244438877`*^9, 3.747085281033966*^9, {3.747085347964284*^9, 
   3.747085377678965*^9}, {3.74708543040235*^9, 3.747085475239654*^9}, 
   3.747238866316411*^9, 3.760792862954652*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1316, 792},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"NPMStyleSheet1.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 204, 4, 81, "Title"],
Cell[787, 28, 83, 1, 51, "Author"],
Cell[873, 31, 135, 3, 25, "Author"],
Cell[CellGroupData[{
Cell[1033, 38, 183, 2, 33, "Section"],
Cell[1219, 42, 351, 10, 27, "Text"],
Cell[1573, 54, 118, 2, 37, "Input"],
Cell[1694, 58, 124, 2, 37, "Input"],
Cell[1821, 62, 1380, 30, 66, "Input"],
Cell[3204, 94, 650, 17, 37, "Input"],
Cell[3857, 113, 455, 14, 37, "Input"],
Cell[4315, 129, 350, 11, 37, "Input"],
Cell[4668, 142, 1096, 26, 66, "Input"],
Cell[5767, 170, 539, 14, 37, "Input"],
Cell[6309, 186, 367, 11, 37, "Input"],
Cell[6679, 199, 374, 11, 37, "Input"],
Cell[7056, 212, 544, 9, 26, "Text"],
Cell[7603, 223, 1772, 35, 65, "Input"],
Cell[9378, 260, 730, 16, 37, "Input"],
Cell[10111, 278, 403, 11, 37, "Input"],
Cell[10517, 291, 403, 11, 37, "Input"],
Cell[10923, 304, 754, 18, 65, "Input"],
Cell[11680, 324, 757, 16, 37, "Input"],
Cell[12440, 342, 403, 11, 37, "Input"],
Cell[12846, 355, 403, 11, 37, "Input"],
Cell[13252, 368, 158, 3, 26, "Text"],
Cell[13413, 373, 1482, 40, 230, "Input"],
Cell[CellGroupData[{
Cell[14920, 417, 312, 8, 37, "Input"],
Cell[15235, 427, 10162, 181, 287, "Output"]
}, Open  ]],
Cell[25412, 611, 116, 1, 26, "Text"],
Cell[25531, 614, 4529, 107, 278, "Input"],
Cell[30063, 723, 364, 6, 26, "Text"],
Cell[30430, 731, 6696, 166, 531, "Input"],
Cell[37129, 899, 113, 1, 26, "Text"],
Cell[37245, 902, 3543, 96, 422, "Input"],
Cell[40791, 1000, 117, 1, 26, "Text"],
Cell[40911, 1003, 1549, 40, 86, "Input"],
Cell[42463, 1045, 3234, 77, 300, "Input"],
Cell[45700, 1124, 253, 7, 50, "Text"],
Cell[45956, 1133, 3525, 94, 206, "Input"],
Cell[49484, 1229, 121, 1, 26, "Text"],
Cell[49608, 1232, 14126, 354, 1374, "Input"],
Cell[63737, 1588, 163, 3, 26, "Text"],
Cell[63903, 1593, 5899, 128, 544, "Input"],
Cell[69805, 1723, 140, 1, 26, "Text"],
Cell[69948, 1726, 2598, 56, 254, "Input"],
Cell[72549, 1784, 143, 1, 26, "Text"],
Cell[72695, 1787, 3005, 69, 226, "Input"],
Cell[75703, 1858, 174, 2, 26, "Text"],
Cell[75880, 1862, 3621, 57, 206, "Input"],
Cell[79504, 1921, 990, 27, 134, "Input"],
Cell[80497, 1950, 728, 23, 158, "Input"],
Cell[CellGroupData[{
Cell[81250, 1977, 3485, 105, 158, "Input"],
Cell[84738, 2084, 13737, 276, 74, "Output"],
Cell[98478, 2362, 20445, 354, 287, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118960, 2721, 6487, 175, 365, "Input"],
Cell[125450, 2898, 150859, 2518, 783, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

